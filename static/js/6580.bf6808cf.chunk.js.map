{"version":3,"file":"static/js/6580.bf6808cf.chunk.js","mappings":"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","sources":["components/Tools/Select/utils/select.ts","components/Tools/Select/utils/useSelect.ts","components/Tools/Select/Select.tsx"],"sourcesContent":["import MapView from \"@arcgis/core/views/MapView\";\nimport GraphicsLayer from \"@arcgis/core/layers/GraphicsLayer\";\nimport SketchViewModel from \"@arcgis/core/widgets/Sketch/SketchViewModel\";\nimport Graphic from \"@arcgis/core/Graphic\";\nimport * as geometryEngine from \"@arcgis/core/geometry/geometryEngine\";\nlet distance = 0;\nlet propertyLayerView: __esri.FeatureLayerView;\nlet sketchVm: SketchViewModel;\nlet highlight: any;\nlet layer: GraphicsLayer;\n\nexport function cancelSelect() {\n  sketchVm.cancel();\n  if (highlight) {\n    highlight.remove();\n  }\n  layer.removeAll();\n}\nexport function initializeSelect(\n  view: MapView,\n  geometrySet: Function,\n  setSelectedTool: Function\n) {\n  layer = new GraphicsLayer({\n    listMode: \"hide\",\n  });\n  view.map.add(layer);\n  sketchVm = new SketchViewModel({\n    view: view,\n    layer: layer,\n    defaultCreateOptions: {\n      mode: \"hybrid\",\n    },\n  });\n  propertyLayerView = view.allLayerViews.find((lv) => {\n    return lv.layer.title.includes(\"Property\") && lv.layer.type === \"feature\";\n  }) as __esri.FeatureLayerView;\n  const propertyLayer = view.map.allLayers.find((layer) => {\n    return layer.title.includes(\"Property\") && layer.type === \"feature\";\n  }) as __esri.FeatureLayer;\n  view.whenLayerView(propertyLayer).then((lv) => {\n    propertyLayerView = lv;\n  });\n  sketchVm.watch(\"activeTool\", (activeTool) => {\n    setSelectedTool(activeTool);\n  });\n  sketchVm.on(\"create\" as any, (event: __esri.SketchViewModelCreateEvent) => {\n    if (event.state === \"start\") {\n      layer.graphics.removeAll();\n      if (highlight) {\n        highlight.remove();\n      }\n    }\n    if (event.state === \"complete\") {\n      if (distance > 0) {\n        geometrySet(buffer(distance, event.graphic));\n      } else {\n        geometrySet(event.graphic.geometry);\n      }\n      sketchVm.create(event.tool);\n      if (highlight) {\n        highlight.remove();\n      }\n      layer.graphics.removeAll();\n    }\n    if (event.state === \"active\") {\n      if (distance === 0) {\n        highlightProperties(view, event.graphic.geometry).then(\n          (newHighlight) => {\n            if (highlight) {\n              highlight.remove();\n            }\n            highlight = newHighlight;\n          }\n        );\n      } else {\n        const geom = buffer(distance, event.graphic) as __esri.Geometry;\n        sketchVm.layer.removeAll();\n        const symbol = {\n          type: \"simple-fill\",\n          color: [255, 255, 0, 0.2],\n          style: \"solid\",\n        };\n        sketchVm.layer.add(new Graphic({ geometry: geom, symbol: symbol }));\n        highlightProperties(view, geom).then((newHighlight) => {\n          if (highlight) {\n            highlight.remove();\n          }\n          highlight = newHighlight;\n        });\n      }\n    }\n  });\n  return sketchVm;\n}\n\nfunction buffer(distance: number, graphic: Graphic) {\n  return geometryEngine.buffer(graphic.geometry, distance, \"feet\");\n}\n\nfunction highlightProperties(view: MapView, geometry: __esri.Geometry) {\n  return new Promise((resolve, reject) => {\n    propertyLayerView\n      .queryFeatures({\n        geometry: geometry,\n        outSpatialReference: view.spatialReference,\n      })\n      .then((result) => {\n        const h = propertyLayerView.highlight(result.features);\n        resolve(h);\n      });\n  });\n}\n\nexport function bufferDistanceChanged(event: any, setDistance: Function) {\n  if (event.target.value === \"\") {\n    distance = 0;\n  } else {\n    distance = parseInt(event.target.value);\n  }\n  setDistance(distance);\n}\n\nexport function createSketch(\n  sketchVm: SketchViewModel,\n  tool: \"point\" | \"multipoint\" | \"polyline\" | \"polygon\" | \"rectangle\" | \"circle\"\n) {\n  sketchVm.create(tool);\n}\n\nexport function bufferProperty(\n  property: Graphic,\n  distance: number,\n  geometrySet: Function\n) {\n  geometrySet(geometryEngine.buffer(property.geometry, distance, \"feet\"));\n}\n","import { useCallback, useEffect, useRef, useState } from \"react\";\nimport {\n    cancelSelect,\n    initializeSelect,\n  } from \"../utils/select\";\nimport SketchViewModel from \"@arcgis/core/widgets/Sketch/SketchViewModel\";\n  \nconst useSelect = (args: any) => {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const loaded = useRef(false);\n    const [isActive, setIsActive] = useState(false);\n    \n    const [selectedTool, setSelectedTool] = useState(\"\");\n    const [distance, setDistance] = useState(0);\n    \n    const [sketchVm, setSketchVm] = useState<SketchViewModel>();\n    const [selectedProperty, setSelectedProperty] = useState(undefined) as any;\n    \n    useEffect(() => {\n      if (!loaded.current) {\n        loaded.current = true;\n        setSketchVm(\n          initializeSelect(\n            args.view,\n            args.geometrySet,\n            setSelectedTool\n          )\n        );\n      }\n      return () => {\n        sketchVm && sketchVm.destroy();\n      };\n    }, []); // only after first render\n    useEffect(() => {\n      if (args.selectedProperty) {\n        setSelectedProperty(args.selectedProperty);\n      }\n    }, [args.selectedProperty]);\n    useEffect(() => {\n      if (sketchVm && args.selectDismissed) {\n        sketchVm.cancel();\n        setSelectedTool(\"\");\n      }\n    }, [args.selectDismissed]);\n    useEffect(() => {\n      setIsActive(args.isActive);\n    }, [args.isActive]);\n    const toolDismissed = useCallback((e: any) => {\n      args.toolDismissed();\n      cancelSelect();\n    }, []);\n    return {isActive, selectedTool, setSelectedTool, sketchVm, distance, setDistance\n    , selectedProperty, toolDismissed}\n};\n\nexport default useSelect;\n","import {\n  CalcitePanel,\n  CalciteAction,\n  CalciteButton,\n  CalciteInput,\n  CalciteLabel,\n} from \"@esri/calcite-components-react\";\nimport React from \"react\";\nimport \"./Select.css\";\nimport { collapsePanel } from \"../../Shell/utils/shell\";\n\nimport {\n  bufferDistanceChanged,\n  bufferProperty,\n  createSketch,\n} from \"./utils/select\";\nimport useSelect from \"./utils/useSelect\";\nexport const Select = (args: any) => {\n  const {isActive, selectedTool, setSelectedTool, sketchVm, distance, setDistance\n    , selectedProperty, toolDismissed} = useSelect(args);\n  return (\n    <CalcitePanel\n      id=\"select-panel\"\n      heading=\"Select\"\n      data-panel=\"select\"\n      hidden={!isActive}\n      closed={!isActive ? true : undefined}\n      dismissed={!isActive ? true : undefined}\n      dismissible\n      onCalcitePanelDismiss={toolDismissed}\n    >\n      <CalciteAction\n        icon=\"chevron-up\"\n        text=\"\"\n        slot=\"header-actions-end\"\n        onClick={collapsePanel}\n      ></CalciteAction>\n      <div id=\"select-tools\">\n        <div className=\"select-container\">\n          <CalciteAction\n            icon=\"pin\"\n            text=\"Point\"\n            active={selectedTool === \"point\" ? true : undefined}\n            onClick={() => {\n              setSelectedTool(\"point\");\n              if (sketchVm) {\n                createSketch(sketchVm, \"point\");\n              }\n            }}\n          ></CalciteAction>\n          <CalciteAction\n            icon=\"line\"\n            text=\"Line\"\n            active={selectedTool === \"line\" ? true : undefined}\n            onClick={() => {\n              setSelectedTool(\"line\");\n              if (sketchVm) {\n                createSketch(sketchVm, \"polyline\");\n              }\n            }}\n          ></CalciteAction>\n          <CalciteAction\n            icon=\"polygon\"\n            text=\"Polygon\"\n            active={selectedTool === \"polygon\" ? true : undefined}\n            onClick={() => {\n              setSelectedTool(\"polygon\");\n              if (sketchVm) {\n                createSketch(sketchVm, \"polygon\");\n              }\n            }}\n          ></CalciteAction>\n          <CalciteAction\n            icon=\"pins\"\n            text=\"Multi-Point\"\n            active={selectedTool === \"multipoint\" ? true : undefined}\n            onClick={() => {\n              setSelectedTool(\"multipoint\");\n              if (sketchVm) {\n                createSketch(sketchVm, \"multipoint\");\n              }\n            }}\n          ></CalciteAction>\n          <CalciteAction icon=\"trash\" text=\"Clear\"></CalciteAction>\n        </div>\n        <div className=\"buffer-container\">\n          <CalciteLabel>\n            Buffer Distance\n            <CalciteInput\n              type=\"number\"\n              suffixText=\"feet\"\n              step={50}\n              min={0}\n              max={5280}\n              value={distance.toString()}\n              clearable\n              onCalciteInputChange={(event) =>\n                bufferDistanceChanged(event, setDistance)\n              }\n            ></CalciteInput>\n          </CalciteLabel>\n          <CalciteButton\n            disabled={selectedProperty === undefined ? true : undefined}\n            hidden={distance <= 0}\n            width=\"full\"\n            onClick={() =>\n              bufferProperty(selectedProperty, distance, args.geometrySet)\n            }\n          >\n            Buffer Property\n          </CalciteButton>\n        </div>\n      </div>\n    </CalcitePanel>\n  );\n};\nexport default React.memo(Select);\n"],"names":["propertyLayerView","sketchVm","highlight","layer","distance","cancelSelect","cancel","remove","removeAll","initializeSelect","view","geometrySet","setSelectedTool","GraphicsLayer","listMode","map","add","SketchViewModel","defaultCreateOptions","mode","allLayerViews","find","lv","title","includes","type","propertyLayer","allLayers","whenLayerView","then","watch","activeTool","on","event","state","graphics","buffer","graphic","geometry","create","tool","highlightProperties","newHighlight","geom","symbol","color","style","Graphic","geometryEngine","Promise","resolve","reject","queryFeatures","outSpatialReference","spatialReference","result","h","features","bufferDistanceChanged","setDistance","target","value","parseInt","createSketch","args","loaded","useRef","isActive","setIsActive","useState","selectedTool","setSketchVm","selectedProperty","setSelectedProperty","undefined","useEffect","current","destroy","selectDismissed","toolDismissed","useCallback","e","Select","useSelect","id","heading","hidden","closed","dismissed","dismissible","onCalcitePanelDismiss","icon","text","slot","onClick","collapsePanel","className","active","suffixText","step","min","max","toString","clearable","onCalciteInputChange","disabled","width","property","bufferProperty","React"],"sourceRoot":""}