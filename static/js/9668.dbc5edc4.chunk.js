"use strict";(globalThis.webpackChunkimaps_app=globalThis.webpackChunkimaps_app||[]).push([[9668],{6741:(e,r,t)=>{t.d(r,{O:()=>b});var i=t(27366),s=t(76200),a=t(66978),l=t(35995),o=t(49901),n=t(49861),y=(t(63780),t(25243),t(38511)),p=t(69912),d=t(53866),u=t(78952),c=t(45948);const b=e=>{let r=class extends e{constructor(){super(...arguments),this.capabilities=void 0,this.copyright=null,this.fullExtent=null,this.legendEnabled=!0,this.spatialReference=null,this.version=void 0,this._allLayersAndTablesPromise=null,this._allLayersAndTablesMap=null}readCapabilities(e,r){const t=r.capabilities&&r.capabilities.split(",").map((e=>e.toLowerCase().trim()));if(!t)return{operations:{supportsExportMap:!1,supportsExportTiles:!1,supportsIdentify:!1,supportsQuery:!1,supportsTileMap:!1},exportMap:null,exportTiles:null};const i=this.type,s=t.includes("data"),a=t.includes("query"),l=t.includes("map"),n=!!r.exportTilesAllowed,y=t.includes("tilemap"),p="tile"!==i&&!!r.supportsDynamicLayers,d="tile"!==i&&(!r.tileInfo||p),u="tile"!==i&&(!r.tileInfo||p),c="tile"!==i,b=r.cimVersion&&o.G.parse(r.cimVersion),f=b?.since(1,4)??!1,h=b?.since(2,0)??!1;return{operations:{supportsExportMap:l,supportsExportTiles:n,supportsIdentify:a,supportsQuery:s,supportsTileMap:y},exportMap:l?{supportsArcadeExpressionForLabeling:f,supportsSublayersChanges:c,supportsDynamicLayers:p,supportsSublayerVisibility:d,supportsSublayerDefinitionExpression:u,supportsCIMSymbols:h}:null,exportTiles:n?{maxExportTilesCount:+r.maxExportTilesCount}:null}}readVersion(e,r){let t=r.currentVersion;return t||(t=r.hasOwnProperty("capabilities")||r.hasOwnProperty("tables")?10:r.hasOwnProperty("supportedImageFormatTypes")?9.31:9.3),t}async fetchSublayerInfo(e,r){return await this.fetchAllLayersAndTables(r),this._allLayersAndTablesMap?.get(e)}async fetchAllLayersAndTables(e){await this.load(e),this._allLayersAndTablesPromise||(this._allLayersAndTablesPromise=(0,s.default)((0,l.mN)(this.url).path+"/layers",{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey}}).then((e=>{this._allLayersAndTablesMap=new Map;for(const r of e.data.layers)this._allLayersAndTablesMap.set(r.id,r);return{result:e.data}}),(e=>({error:e}))));const r=await this._allLayersAndTablesPromise;if((0,a.k_)(e),"result"in r)return r.result;throw r.error}};return(0,i._)([(0,n.Cb)({readOnly:!0})],r.prototype,"capabilities",void 0),(0,i._)([(0,y.r)("service","capabilities",["capabilities","exportTilesAllowed","maxExportTilesCount","supportsDynamicLayers","tileInfo"])],r.prototype,"readCapabilities",null),(0,i._)([(0,n.Cb)({json:{read:{source:"copyrightText"}}})],r.prototype,"copyright",void 0),(0,i._)([(0,n.Cb)({type:d.Z})],r.prototype,"fullExtent",void 0),(0,i._)([(0,n.Cb)(c.id)],r.prototype,"id",void 0),(0,i._)([(0,n.Cb)({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],r.prototype,"legendEnabled",void 0),(0,i._)([(0,n.Cb)(c.C_)],r.prototype,"popupEnabled",void 0),(0,i._)([(0,n.Cb)({type:u.Z})],r.prototype,"spatialReference",void 0),(0,i._)([(0,n.Cb)({readOnly:!0})],r.prototype,"version",void 0),(0,i._)([(0,y.r)("version",["currentVersion","capabilities","tables","supportedImageFormatTypes"])],r.prototype,"readVersion",null),r=(0,i._)([(0,p.j)("esri.layers.mixins.ArcGISMapService")],r),r}},18870:(e,r,t)=>{t.d(r,{x:()=>m});var i=t(27366),s=t(40281),a=t(77178),l=t(10064),o=t(32718),n=t(94172),y=t(49861),p=(t(63780),t(23879)),d=(t(25243),t(69912)),u=t(25265),c=t(77990),b=t(58132);const f=o.Z.getLogger("esri.layers.TileLayer");const h=s.Z.ofType(c.Z);function g(e,r){e&&e.forEach((e=>{r(e),e.sublayers&&e.sublayers.length&&g(e.sublayers,r)}))}const m=e=>{let r=class extends e{constructor(){super(...arguments),this.allSublayers=new a.Z({getCollections:()=>[this.sublayers],getChildrenFunction:e=>e.sublayers}),this.sublayersSourceJSON={[u.s3.SERVICE]:{},[u.s3.PORTAL_ITEM]:{},[u.s3.WEB_SCENE]:{},[u.s3.WEB_MAP]:{}},this.addHandles((0,n.YP)((()=>this.sublayers),((e,r)=>this._handleSublayersChange(e,r)),n.Z_))}readSublayers(e,r){if(!r||!e)return;const{sublayersSourceJSON:t}=this,i=(0,u.M9)(r.origin);if(i<u.s3.SERVICE)return;if(t[i]={context:r,visibleLayers:e.visibleLayers||t[i].visibleLayers,layers:e.layers||t[i].layers},i>u.s3.SERVICE)return;this._set("serviceSublayers",this.createSublayersForOrigin("service").sublayers);const{sublayers:s,origin:a}=this.createSublayersForOrigin("web-document"),l=(0,p.vw)(this);l.setDefaultOrigin(a),this._set("sublayers",new h(s)),l.setDefaultOrigin("user")}findSublayerById(e){return this.allSublayers.find((r=>r.id===e))}createServiceSublayers(){return this.createSublayersForOrigin("service").sublayers}createSublayersForOrigin(e){const r=(0,u.M9)("web-document"===e?"web-map":e);let t=u.s3.SERVICE,i=this.sublayersSourceJSON[u.s3.SERVICE].layers,s=this.sublayersSourceJSON[u.s3.SERVICE].context,a=null;const l=[u.s3.PORTAL_ITEM,u.s3.WEB_SCENE,u.s3.WEB_MAP].filter((e=>e<=r));for(const u of l){const e=this.sublayersSourceJSON[u];(0,b.ac)(e.layers)&&(t=u,i=e.layers,s=e.context,e.visibleLayers&&(a={visibleLayers:e.visibleLayers,context:e.context}))}const o=[u.s3.PORTAL_ITEM,u.s3.WEB_SCENE,u.s3.WEB_MAP].filter((e=>e>t&&e<=r));let n=null;for(const u of o){const{layers:e,visibleLayers:r,context:t}=this.sublayersSourceJSON[u];e&&(n={layers:e,context:t}),r&&(a={visibleLayers:r,context:t})}const y=function(e,r){const t=[],i={};return e?(e.forEach((e=>{const s=new c.Z;if(s.read(e,r),i[s.id]=s,null!=e.parentLayerId&&-1!==e.parentLayerId){const r=i[e.parentLayerId];r.sublayers||(r.sublayers=[]),r.sublayers.unshift(s)}else t.unshift(s)})),t):t}(i,s),p=new Map,d=new Set;if(n)for(const u of n.layers)p.set(u.id,u);if(a)for(const u of a.visibleLayers)d.add(u);return g(y,(e=>{n&&e.read(p.get(e.id),n.context),a&&e.read({defaultVisibility:d.has(e.id)},a.context)})),{origin:(0,u.x3)(t),sublayers:new h({items:y})}}read(e,r){super.read(e,r),this.readSublayers(e,r)}_handleSublayersChange(e,r){r&&(r.forEach((e=>{e.parent=null,e.layer=null})),this.handles.remove("sublayers-owner")),e&&(e.forEach((e=>{e.parent=this,e.layer=this})),this.handles.add([e.on("after-add",(e=>{let{item:r}=e;r.parent=this,r.layer=this})),e.on("after-remove",(e=>{let{item:r}=e;r.parent=null,r.layer=null}))],"sublayers-owner"),"tile"===this.type&&this.handles.add(e.on("before-changes",(e=>{f.error(new l.Z("tilelayer:sublayers-non-modifiable","ISublayer can't be added, moved, or removed from the layer's sublayers",{layer:this})),e.preventDefault()})),"sublayers-owner"))}};return(0,i._)([(0,y.Cb)({readOnly:!0})],r.prototype,"allSublayers",void 0),(0,i._)([(0,y.Cb)({readOnly:!0,type:s.Z.ofType(c.Z)})],r.prototype,"serviceSublayers",void 0),(0,i._)([(0,y.Cb)({value:null,type:h,json:{read:!1,write:{allowNull:!0,ignoreOrigin:!0}}})],r.prototype,"sublayers",void 0),(0,i._)([(0,y.Cb)({readOnly:!0})],r.prototype,"sublayersSourceJSON",void 0),r=(0,i._)([(0,d.j)("esri.layers.mixins.SublayersOwner")],r),r}},77990:(e,r,t)=>{t.d(r,{Z:()=>z});var i,s=t(27366),a=(t(59486),t(44055)),l=(t(94931),t(78451),t(98689),t(57823),t(32066),t(49018),t(34999),t(28189),t(9014),t(40464)),o=t(76200),n=t(51508),y=t(40281),p=t(10064),d=t(41691),u=t(79056),c=t(84652),b=t(54472),f=t(32718),h=t(92026),g=t(97642),m=t(76672),S=t(35995),I=t(49861),v=t(23879),_=t(89125),w=t(38511),E=t(69912),L=t(31201),C=t(25243),O=t(25265),x=t(25899),D=t(87165),T=t(83040),P=t(52410),F=t(77748),M=t(85116),V=t(71065),A=t(64020),N=t(23505),j=t(21149),Z=t(81085),R=t(53866),k=t(27823);function U(e){return e&&"esriSMS"===e.type}function J(e,r,t){const i=this.originIdOf(r)>=(0,O.M9)(t.origin);return{ignoreOrigin:!0,allowNull:i,enabled:!!t&&"map-image"===t.layer?.type&&(t.writeSublayerStructure||i)}}function B(e,r,t){return{enabled:!!t&&"tile"===t.layer?.type&&this._isOverridden(r)}}function $(e,r,t){return{ignoreOrigin:!0,enabled:t&&t.writeSublayerStructure||!1}}function q(e,r,t){return{ignoreOrigin:!0,enabled:!!t&&(t.writeSublayerStructure||this.originIdOf(r)>=(0,O.M9)(t.origin))}}let Q=0;const W=new Set;W.add("layer"),W.add("parent"),W.add("loaded"),W.add("loadStatus"),W.add("loadError"),W.add("loadWarnings");let G=i=class extends((0,d.p)((0,g.R)((0,u.IG)(b.Z)))){constructor(e){super(e),this.capabilities=void 0,this.fields=null,this.fullExtent=null,this.geometryType=null,this.globalIdField=null,this.legendEnabled=!0,this.objectIdField=null,this.popupEnabled=!0,this.popupTemplate=null,this.sourceJSON=null,this.title=null,this.typeIdField=null,this.types=null}async load(e){return this.addResolvingPromise((async()=>{if(!this.layer&&!this.url)throw new p.Z("sublayer:missing-layer","Sublayer can't be loaded without being part of a layer",{sublayer:this});let r=null;if(!this.layer||this.originIdOf("url")>O.s3.SERVICE||"data-layer"===this.source?.type)r=(await(0,o.default)(this.url,{responseType:"json",query:{f:"json"},...e})).data;else{let t=this.id;"map-layer"===this.source?.type&&(t=this.source.mapLayerId),r=await this.layer.fetchSublayerInfo(t,e)}r&&(this.sourceJSON=r,this.read({layerDefinition:r},{origin:"service"}))})()),this}readCapabilities(e,r){const t=(e=(r=r.layerDefinition||r).capabilities||e)?e.toLowerCase().split(",").map((e=>e.trim())):[],i=this.url?(0,x.Qc)(this.url):null,s=t.includes((0,h.pC)(i)&&"MapServer"===i.serverType?"data":"query");return{exportMap:{supportsModification:!!r.canModifyLayer},operations:{supportsQuery:s}}}set definitionExpression(e){this._setAndNotifyLayer("definitionExpression",e)}get fieldsIndex(){return new P.Z(this.fields||[])}set floorInfo(e){this._setAndNotifyLayer("floorInfo",e)}readGlobalIdFieldFromService(e,r){if((r=r.layerDefinition||r).globalIdField)return r.globalIdField;if(r.fields)for(const t of r.fields)if("esriFieldTypeGlobalID"===t.type)return t.name}get id(){return this._get("id")??Q++}set id(e){this._get("id")!==e&&(!1!==this.get("layer.capabilities.exportMap.supportsDynamicLayers")?this._set("id",e):this._logLockedError("id","capability not available 'layer.capabilities.exportMap.supportsDynamicLayers'"))}set labelingInfo(e){this._setAndNotifyLayer("labelingInfo",e)}writeLabelingInfo(e,r,t,i){e&&e.length&&(r.layerDefinition={drawingInfo:{labelingInfo:e.map((e=>e.write({},i)))}})}set labelsVisible(e){this._setAndNotifyLayer("labelsVisible",e)}set layer(e){this._set("layer",e),this.sublayers&&this.sublayers.forEach((r=>r.layer=e))}set listMode(e){this._set("listMode",e)}set minScale(e){this._setAndNotifyLayer("minScale",e)}readMinScale(e,r){return r.minScale||r.layerDefinition&&r.layerDefinition.minScale||0}set maxScale(e){this._setAndNotifyLayer("maxScale",e)}readMaxScale(e,r){return r.maxScale||r.layerDefinition&&r.layerDefinition.maxScale||0}get effectiveScaleRange(){const{minScale:e,maxScale:r}=this;return{minScale:e,maxScale:r}}readObjectIdFieldFromService(e,r){if((r=r.layerDefinition||r).objectIdField)return r.objectIdField;if(r.fields)for(const t of r.fields)if("esriFieldTypeOID"===t.type)return t.name}set opacity(e){this._setAndNotifyLayer("opacity",e)}readOpacity(e,r){const t=r.layerDefinition;return 1-.01*(null!=t.transparency?t.transparency:t.drawingInfo.transparency)}writeOpacity(e,r,t,i){r.layerDefinition={drawingInfo:{transparency:100-100*e}}}writeParent(e,r){this.parent&&this.parent!==this.layer?r.parentLayerId=(0,C.vU)(this.parent.id):r.parentLayerId=-1}get defaultPopupTemplate(){return this.createPopupTemplate()}set renderer(e){if(e)for(const r of e.getSymbols())if((0,n.dU)(r)){f.Z.getLogger(this.declaredClass).warn("Sublayer renderer should use 2D symbols");break}this._setAndNotifyLayer("renderer",e)}get source(){return this._get("source")||new N.R({mapLayerId:this.id})}set source(e){this._setAndNotifyLayer("source",e)}set sublayers(e){this._handleSublayersChange(e,this._get("sublayers")),this._set("sublayers",e)}castSublayers(e){return(0,C.se)(y.Z.ofType(i),e)}writeSublayers(e,r,t){this.get("sublayers.length")&&(r[t]=this.sublayers.map((e=>e.id)).toArray().reverse())}readTypeIdField(e,r){let t=(r=r.layerDefinition||r).typeIdField;if(t&&r.fields){t=t.toLowerCase();const e=r.fields.find((e=>e.name.toLowerCase()===t));e&&(t=e.name)}return t}get url(){const e=this.layer?.parsedUrl??this._lastParsedUrl,r=this.source;if(!e)return null;if(this._lastParsedUrl=e,"map-layer"===r?.type)return`${e.path}/${r.mapLayerId}`;const t={layer:JSON.stringify({source:this.source})};return`${e.path}/dynamicLayer?${(0,S.B7)(t)}`}set url(e){this._overrideIfSome("url",e)}set visible(e){this._setAndNotifyLayer("visible",e)}writeVisible(e,r,t,i){r[t]=this.getAtOrigin("defaultVisibility","service")||e}clone(){const{store:e}=(0,v.vw)(this),r=new i;return(0,v.vw)(r).store=e.clone(W),this.commitProperty("url"),r._lastParsedUrl=this._lastParsedUrl,r}createPopupTemplate(e){return(0,Z.eZ)(this,e)}createQuery(){return new j.Z({returnGeometry:!0,where:this.definitionExpression||"1=1"})}async createFeatureLayer(){if(this.hasOwnProperty("sublayers"))return null;const e=this.layer?.parsedUrl,r=new(0,(await Promise.resolve().then(t.bind(t,64326))).default)({url:e.path});return e&&this.source&&("map-layer"===this.source.type?r.layerId=this.source.mapLayerId:r.dynamicDataSource=this.source),null!=this.layer.refreshInterval&&(r.refreshInterval=this.layer.refreshInterval),this.definitionExpression&&(r.definitionExpression=this.definitionExpression),this.floorInfo&&(r.floorInfo=(0,c.d9)(this.floorInfo)),this.originIdOf("labelingInfo")>O.s3.SERVICE&&(r.labelingInfo=(0,c.d9)(this.labelingInfo)),this.originIdOf("labelsVisible")>O.s3.DEFAULTS&&(r.labelsVisible=this.labelsVisible),this.originIdOf("legendEnabled")>O.s3.DEFAULTS&&(r.legendEnabled=this.legendEnabled),this.originIdOf("visible")>O.s3.DEFAULTS&&(r.visible=this.visible),this.originIdOf("minScale")>O.s3.DEFAULTS&&(r.minScale=this.minScale),this.originIdOf("maxScale")>O.s3.DEFAULTS&&(r.maxScale=this.maxScale),this.originIdOf("opacity")>O.s3.DEFAULTS&&(r.opacity=this.opacity),this.originIdOf("popupTemplate")>O.s3.DEFAULTS&&(r.popupTemplate=(0,c.d9)(this.popupTemplate)),this.originIdOf("renderer")>O.s3.SERVICE&&(r.renderer=(0,c.d9)(this.renderer)),"data-layer"===this.source?.type&&(r.dynamicDataSource=this.source.clone()),this.originIdOf("title")>O.s3.DEFAULTS&&(r.title=this.title),"map-image"===this.layer.type&&this.layer.originIdOf("customParameters")>O.s3.DEFAULTS&&(r.customParameters=this.layer.customParameters),"tile"===this.layer.type&&this.layer.originIdOf("customParameters")>O.s3.DEFAULTS&&(r.customParameters=this.layer.customParameters),r}getField(e){return this.fieldsIndex.get(e)}getFeatureType(e){const{typeIdField:r,types:t}=this;if(!r||!e)return null;const i=e.attributes?e.attributes[r]:void 0;if(null==i)return null;let s=null;return t.some((e=>{const{id:r}=e;return null!=r&&(r.toString()===i.toString()&&(s=e),!!s)})),s}getFieldDomain(e,r){const t=r&&r.feature,i=this.getFeatureType(t);if(i){const r=i.domains&&i.domains[e];if(r&&"inherited"!==r.type)return r}return this._getLayerDomain(e)}async queryFeatures(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.createQuery(),r=arguments.length>1?arguments[1]:void 0;if(await this.load(),!this.capabilities?.operations?.supportsQuery)throw new p.Z("Sublayer.queryFeatures","this layer doesn't support queries.");const[{executeQuery:i},{default:s}]=await Promise.all([Promise.resolve().then(t.bind(t,5192)),Promise.resolve().then(t.bind(t,49818))]),a=await i(this.url,j.Z.from(e),this.layer?.spatialReference??null,{...r,query:{...this.layer?.customParameters,token:this.layer?.apiKey}}),l=s.fromJSON(a.data);if(l?.features)for(const t of l.features)t.sourceLayer=this;return l}toExportImageJSON(e){const r={id:this.id,source:this.source?.toJSON()||{mapLayerId:this.id,type:"mapLayer"}},t=(0,m._)(e,this.definitionExpression);(0,h.pC)(t)&&(r.definitionExpression=t);const i=["renderer","labelingInfo","opacity","labelsVisible"].reduce(((e,r)=>(e[r]=this.originIdOf(r),e)),{}),s=Object.keys(i).some((e=>i[e]>O.s3.SERVICE));if(s){const e=r.drawingInfo={};if(i.renderer>O.s3.SERVICE&&(e.renderer=this.renderer?this.renderer.toJSON():null),i.labelsVisible>O.s3.SERVICE&&(e.showLabels=this.labelsVisible),this.labelsVisible&&i.labelingInfo>O.s3.SERVICE){!this.loaded&&this.labelingInfo.some((e=>!e.labelPlacement))&&f.Z.getLogger(this.declaredClass).warnOnce(`A Sublayer (title: ${this.title}, id: ${this.id}) has an undefined 'labelPlacement' and so labels cannot be displayed. Either define a valid 'labelPlacement' or call Sublayer.load() to use a default value based on geometry type.`,{sublayer:this});let r=this.labelingInfo;(0,h.pC)(this.geometryType)&&(r=(0,M.a)(this.labelingInfo,k.Mk.toJSON(this.geometryType))),e.labelingInfo=r.filter((e=>e.labelPlacement)).map((e=>e.toJSON({origin:"service",layer:this.layer}))),e.showLabels=!0}i.opacity>O.s3.SERVICE&&(e.transparency=100-100*this.opacity),this._assignDefaultSymbolColors(e.renderer)}return r}_assignDefaultSymbolColors(e){this._forEachSimpleMarkerSymbols(e,(e=>{e.color||"esriSMSX"!==e.style&&"esriSMSCross"!==e.style||(e.outline&&e.outline.color?e.color=e.outline.color:e.color=[0,0,0,0])}))}_forEachSimpleMarkerSymbols(e,r){if(e){const t="uniqueValueInfos"in e?e.uniqueValueInfos:"classBreakInfos"in e?e.classBreakInfos:[];for(const e of t)U(e.symbol)&&r(e.symbol);"symbol"in e&&U(e.symbol)&&r(e.symbol),"defaultSymbol"in e&&U(e.defaultSymbol)&&r(e.defaultSymbol)}}_setAndNotifyLayer(e,r){const t=this.layer,i=this._get(e);let s,a;switch(e){case"definitionExpression":case"floorInfo":s="supportsSublayerDefinitionExpression";case"minScale":case"maxScale":case"visible":s="supportsSublayerVisibility";break;case"labelingInfo":case"labelsVisible":case"opacity":case"renderer":case"source":s="supportsDynamicLayers",a="supportsModification"}const l=(0,v.vw)(this).getDefaultOrigin();if("service"!==l){if(s&&!1===this.get(`layer.capabilities.exportMap.${s}`))return void this._logLockedError(e,`capability not available 'layer.capabilities.exportMap.${s}'`);if(a&&!1===this.get(`capabilities.exportMap.${a}`))return void this._logLockedError(e,`capability not available 'capabilities.exportMap.${a}'`)}"source"!==e||"not-loaded"===this.loadStatus?(this._set(e,r),"service"!==l&&i!==r&&t&&t.emit&&t.emit("sublayer-update",{propertyName:e,target:this})):this._logLockedError(e,"'source' can't be changed after calling sublayer.load()")}_handleSublayersChange(e,r){r&&(r.forEach((e=>{e.parent=null,e.layer=null})),this.handles.removeAll()),e&&(e.forEach((e=>{e.parent=this,e.layer=this.layer})),this.handles.add([e.on("after-add",(e=>{let{item:r}=e;r.parent=this,r.layer=this.layer})),e.on("after-remove",(e=>{let{item:r}=e;r.parent=null,r.layer=null})),e.on("before-changes",(e=>{const r=this.get("layer.capabilities.exportMap.supportsSublayersChanges");null==r||r||(f.Z.getLogger(this.declaredClass).error(new p.Z("sublayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{sublayer:this,layer:this.layer})),e.preventDefault())}))]))}_logLockedError(e,r){f.Z.getLogger(this.declaredClass).error(new p.Z("sublayer:locked",`Property '${String(e)}' can't be changed on Sublayer from the layer '${this.layer.id}'`,{reason:r,sublayer:this,layer:this.layer}))}_getLayerDomain(e){const r=this.fieldsIndex.get(e);return r?r.domain:null}};G.test={isMapImageLayerOverridePolicy:e=>e===$||e===J,isTileImageLayerOverridePolicy:e=>e===B},(0,s._)([(0,I.Cb)({readOnly:!0})],G.prototype,"capabilities",void 0),(0,s._)([(0,w.r)("service","capabilities",["layerDefinition.canModifyLayer","layerDefinition.capabilities"])],G.prototype,"readCapabilities",null),(0,s._)([(0,I.Cb)({type:String,value:null,json:{name:"layerDefinition.definitionExpression",write:{allowNull:!0,overridePolicy:J}}})],G.prototype,"definitionExpression",null),(0,s._)([(0,I.Cb)({type:[T.Z],json:{origins:{service:{read:{source:"layerDefinition.fields"}}}}})],G.prototype,"fields",void 0),(0,s._)([(0,I.Cb)({readOnly:!0})],G.prototype,"fieldsIndex",null),(0,s._)([(0,I.Cb)({type:V.Z,value:null,json:{name:"layerDefinition.floorInfo",read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo",overridePolicy:J},origins:{"web-scene":{read:!1,write:!1}}}})],G.prototype,"floorInfo",null),(0,s._)([(0,I.Cb)({type:R.Z,json:{read:{source:"layerDefinition.extent"}}})],G.prototype,"fullExtent",void 0),(0,s._)([(0,I.Cb)({type:k.Mk.apiValues,json:{origins:{service:{name:"layerDefinition.geometryType",read:{reader:k.Mk.read}}}}})],G.prototype,"geometryType",void 0),(0,s._)([(0,I.Cb)({type:String})],G.prototype,"globalIdField",void 0),(0,s._)([(0,w.r)("service","globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],G.prototype,"readGlobalIdFieldFromService",null),(0,s._)([(0,I.Cb)({type:C.z8,json:{write:{ignoreOrigin:!0}}})],G.prototype,"id",null),(0,s._)([(0,I.Cb)({value:null,type:[F.Z],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo"},write:{target:"layerDefinition.drawingInfo.labelingInfo",overridePolicy:$}}})],G.prototype,"labelingInfo",null),(0,s._)([(0,L.c)("labelingInfo")],G.prototype,"writeLabelingInfo",null),(0,s._)([(0,I.Cb)({type:Boolean,value:!0,json:{read:{source:"layerDefinition.drawingInfo.showLabels"},write:{target:"layerDefinition.drawingInfo.showLabels",overridePolicy:$}}})],G.prototype,"labelsVisible",null),(0,s._)([(0,I.Cb)({value:null})],G.prototype,"layer",null),(0,s._)([(0,I.Cb)({type:Boolean,value:!0,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend",overridePolicy:q}}})],G.prototype,"legendEnabled",void 0),(0,s._)([(0,I.Cb)({type:["show","hide","hide-children"],value:"show",json:{read:!1,write:!1,origins:{"web-scene":{read:!0,write:!0}}}})],G.prototype,"listMode",null),(0,s._)([(0,I.Cb)({type:Number,value:0,json:{write:{overridePolicy:$}}})],G.prototype,"minScale",null),(0,s._)([(0,w.r)("minScale",["minScale","layerDefinition.minScale"])],G.prototype,"readMinScale",null),(0,s._)([(0,I.Cb)({type:Number,value:0,json:{write:{overridePolicy:$}}})],G.prototype,"maxScale",null),(0,s._)([(0,w.r)("maxScale",["maxScale","layerDefinition.maxScale"])],G.prototype,"readMaxScale",null),(0,s._)([(0,I.Cb)({readOnly:!0})],G.prototype,"effectiveScaleRange",null),(0,s._)([(0,I.Cb)({type:String})],G.prototype,"objectIdField",void 0),(0,s._)([(0,w.r)("service","objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],G.prototype,"readObjectIdFieldFromService",null),(0,s._)([(0,I.Cb)({type:Number,value:1,json:{write:{target:"layerDefinition.drawingInfo.transparency",overridePolicy:$}}})],G.prototype,"opacity",null),(0,s._)([(0,w.r)("opacity",["layerDefinition.drawingInfo.transparency","layerDefinition.transparency"])],G.prototype,"readOpacity",null),(0,s._)([(0,L.c)("opacity")],G.prototype,"writeOpacity",null),(0,s._)([(0,I.Cb)({json:{type:C.z8,write:{target:"parentLayerId",writerEnsuresNonNull:!0,overridePolicy:$}}})],G.prototype,"parent",void 0),(0,s._)([(0,L.c)("parent")],G.prototype,"writeParent",null),(0,s._)([(0,I.Cb)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,r)=>!r.disablePopup},write:{target:"disablePopup",overridePolicy:q,writer(e,r,t){r[t]=!e}}}})],G.prototype,"popupEnabled",void 0),(0,s._)([(0,I.Cb)({type:a.Z,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:q}}})],G.prototype,"popupTemplate",void 0),(0,s._)([(0,I.Cb)({readOnly:!0})],G.prototype,"defaultPopupTemplate",null),(0,s._)([(0,I.Cb)({types:l.A,value:null,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:$},origins:{"web-scene":{types:l.o,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:$}}}}})],G.prototype,"renderer",null),(0,s._)([(0,I.Cb)({types:{key:"type",base:null,typeMap:{"data-layer":A.n,"map-layer":N.R}},cast(e){if(e){if("mapLayerId"in e)return(0,C.TJ)(N.R,e);if("dataSource"in e)return(0,C.TJ)(A.n,e)}return e},json:{name:"layerDefinition.source",write:{overridePolicy:$}}})],G.prototype,"source",null),(0,s._)([(0,I.Cb)()],G.prototype,"sourceJSON",void 0),(0,s._)([(0,I.Cb)({value:null,json:{type:[C.z8],write:{target:"subLayerIds",allowNull:!0,overridePolicy:$}}})],G.prototype,"sublayers",null),(0,s._)([(0,_.p)("sublayers")],G.prototype,"castSublayers",null),(0,s._)([(0,L.c)("sublayers")],G.prototype,"writeSublayers",null),(0,s._)([(0,I.Cb)({type:String,json:{name:"name",write:{overridePolicy:q}}})],G.prototype,"title",void 0),(0,s._)([(0,I.Cb)({type:String})],G.prototype,"typeIdField",void 0),(0,s._)([(0,w.r)("typeIdField",["layerDefinition.typeIdField"])],G.prototype,"readTypeIdField",null),(0,s._)([(0,I.Cb)({type:[D.Z],json:{origins:{service:{read:{source:"layerDefinition.types"}}}}})],G.prototype,"types",void 0),(0,s._)([(0,I.Cb)({type:String,json:{read:{source:"layerUrl"},write:{target:"layerUrl",overridePolicy:B}}})],G.prototype,"url",null),(0,s._)([(0,I.Cb)({type:Boolean,value:!0,json:{read:{source:"defaultVisibility"},write:{target:"defaultVisibility",overridePolicy:$}}})],G.prototype,"visible",null),(0,s._)([(0,L.c)("visible")],G.prototype,"writeVisible",null),G=i=(0,s._)([(0,E.j)("esri.layers.support.Sublayer")],G);const z=G},58132:(e,r,t)=>{t.d(r,{FN:()=>l,QV:()=>a,ac:()=>n});var i=t(92026),s=t(25265);function a(e,r,t){const i=r.flatten((e=>{let{sublayers:r}=e;return r})).length;return i!==e.length||(!!e.some((e=>e.originIdOf("minScale")>t||e.originIdOf("maxScale")>t||e.originIdOf("renderer")>t||e.originIdOf("labelingInfo")>t||e.originIdOf("opacity")>t||e.originIdOf("labelsVisible")>t||e.originIdOf("source")>t))||!o(e,r))}function l(e,r,t){return!!e.some((e=>{const r=e.source;return!(!r||"map-layer"===r.type&&r.mapLayerId===e.id&&((0,i.Wi)(r.gdbVersion)||r.gdbVersion===t))||e.originIdOf("renderer")>s.s3.SERVICE||e.originIdOf("labelingInfo")>s.s3.SERVICE||e.originIdOf("opacity")>s.s3.SERVICE||e.originIdOf("labelsVisible")>s.s3.SERVICE}))||!o(e,r)}function o(e,r){if(!e||!e.length||(0,i.Wi)(r))return!0;const t=r.slice().reverse().flatten((e=>{let{sublayers:r}=e;return r&&r.toArray().reverse()})).map((e=>e.id)).toArray();if(e.length>t.length)return!1;let s=0;const a=t.length;for(const{id:i}of e){for(;s<a&&t[s]!==i;)s++;if(s>=a)return!1}return!0}function n(e){return!!e&&e.some((e=>null!=e.minScale||e.layerDefinition&&null!=e.layerDefinition.minScale))}}}]);
//# sourceMappingURL=9668.dbc5edc4.chunk.js.map