{"version":3,"file":"static/js/5727.9a73b235.chunk.js","mappings":"gOAKA,IAAIA,EACAC,EAoCJ,MAAMC,EAAa,CAACC,EAAsBC,KACxCJ,EAAmBG,EAAKE,MAAM,cAAc,KACtCF,EAAKG,YACPF,EAASG,KACP,CAAEC,OAAQL,EAAKM,OAAOC,OAAQC,KAAMR,EAAKQ,KAAO,GAChD,CAAEC,OAAQ,YAEb,IAEHX,EAAeE,EAAKE,MAAM,UAAU,KAClCD,EAASS,SAASC,YAClBV,EAASS,SAASE,IAChB,IAAIC,EAAAA,EAAQ,CACVC,SAAUd,EAAKM,OACfS,OAAQ,IAAIC,EAAAA,EAAiB,CAC3BC,MAAO,CAAC,EAAG,EAAG,EAAG,KACjBC,MAAO,QACPC,QAAS,CACPC,MAAO,EACPH,MAAO,CAAC,IAAK,IAAK,IAAK,SAK1BI,EAAeC,WAAWrB,EAASK,OAAQN,EAAKM,SACnDL,EAASG,KACP,CAAEC,OAAQL,EAAKM,OAAOC,OAAQC,KAAMR,EAAKQ,KAAO,GAChD,CAAEC,OAAQ,YAEb,GApBH,EAwBIc,EAAqBtB,IACzBA,EAASuB,GAAG,YAAaC,IACvB,MACMC,EAAaD,EAAME,KACmB,IAFrB,CAAC,IAAK,IAAK,QAAS,IAAK,KAE7BC,QAAQF,IACzBD,EAAMI,iBACP,IAEH5B,EAASuB,GAAG,eAAgBC,IAC1BA,EAAMI,iBAAN,IAEF5B,EAASuB,GAAG,gBAAiBC,IAC3BA,EAAMI,iBAAN,IAEF5B,EAASuB,GAAG,eAAgB,CAAC,YAAaC,IACxCA,EAAMI,iBAAN,IAEF5B,EAASuB,GAAG,QAASC,IACnBA,EAAMI,iBAAN,IAEF5B,EAASuB,GAAG,OAAQ,CAAC,UAAWC,IAC9BA,EAAMI,iBAAN,IAGF5B,EAASuB,GAAG,OAAQ,CAAC,QAAS,YAAaC,IACzCA,EAAMI,iBAAN,GADF,E,eC9FF,SAASC,EAASC,GAChB,MAAMC,GAAMC,EAAAA,EAAAA,UACNC,GAASD,EAAAA,EAAAA,SAAO,GAChBhC,GAAWgC,EAAAA,EAAAA,QAAuB,MAClCjC,GAAOiC,EAAAA,EAAAA,QAAuB,MAcpC,OAZAE,EAAAA,EAAAA,YAAU,KACR,IAAKD,EAAOE,SAAWL,EAAK/B,KAAM,CAChCkC,EAAOE,SAAU,EACjB,MAAMC,EDPL,SAA4BL,EAAqBhC,GACtD,MAAMsC,EAAM,IAAIC,EAAAA,EAAI,CAClBC,QAASxC,EAAKsC,IAAIE,UAEdvC,EAAW,IAAIwC,EAAAA,EAAQ,CAC3BH,IAAKA,EACLI,UAAWV,EACXW,WAAY,CACVC,uBAAuB,EACvBC,wBAAwB,EACxBC,iBAAiB,KAsBrB,OAnBA7C,EAAS8C,GAAGC,OAAO,QACnB/C,EAAS8C,GAAGC,OAAO,eAEnBhD,EAAKiD,MAAK,KACRhD,EAASK,OAASN,EAAKM,OAAO4C,QAAQC,OAAO,GAC7CpD,EAAWC,EAAMC,GAEFD,EAAK+C,GAAGK,KAAK,YACFlD,MAAM,YAAamD,IAC3B,IAAD,IAAVA,EAIHtD,EAAWC,EAAMC,IAHD,QAAhB,EAAAJ,SAAA,SAAkBmD,SACN,QAAZ,EAAAlD,SAAA,SAAckD,SAGf,GANH,IASFzB,EAAkBtB,GAEXA,CACR,CC1BqBqD,CAAmBtB,EAAII,QAASL,EAAK/B,MACrDC,EAASmC,QAAUC,EACnBrC,EAAKoC,QAAUL,EAAK/B,IACrB,CACD,MAAO,KAAO,IAAD,EACXC,EAASmC,UAAT,UAAoBnC,EAASmC,eAA7B,OAAoB,EAAkBmB,UAAtC,CADF,GAGC,KAEI,gBAAKC,GAAG,eAAexB,IAAKA,GACpC,CAED,QAAeyB,EAAAA,KAAW3B,E","sources":["components/WebMap/utils/overview.ts","components/WebMap/Overview.tsx"],"sourcesContent":["import MapView from \"@arcgis/core/views/MapView\";\nimport Map from \"@arcgis/core/Map\";\nimport Graphic from \"@arcgis/core/Graphic\";\nimport SimpleFillSymbol from \"@arcgis/core/symbols/SimpleFillSymbol\";\nimport * as geometryEngine from \"@arcgis/core/geometry/geometryEngine\";\nlet stationaryHandle: __esri.WatchHandle;\nlet extentHandle: __esri.WatchHandle;\nexport function initializeOverview(ref: HTMLDivElement, view: MapView) {\n  const map = new Map({\n    basemap: view.map.basemap,\n  });\n  const overview = new MapView({\n    map: map,\n    container: ref,\n    navigation: {\n      mouseWheelZoomEnabled: false,\n      browserTouchPanEnabled: false,\n      momentumEnabled: false,\n    },\n  });\n  overview.ui.remove(\"zoom\");\n  overview.ui.remove(\"attribution\");\n\n  view.when(() => {\n    overview.extent = view.extent.clone().expand(2);\n    addWatches(view, overview);\n\n    const expand = view.ui.find(\"overview\");\n    (expand as __esri.Expand).watch(\"expanded\", (expanded: boolean) => {\n      if (!expanded) {\n        stationaryHandle?.remove();\n        extentHandle?.remove();\n      } else {\n        addWatches(view, overview);\n      }\n    });\n  });\n  disableNavigation(overview);\n\n  return overview;\n}\n\nconst addWatches = (view: __esri.MapView, overview: __esri.MapView) => {\n  stationaryHandle = view.watch(\"stationary\", () => {\n    if (view.stationary) {\n      overview.goTo(\n        { target: view.extent.center, zoom: view.zoom - 4 },\n        { easing: \"ease-out\" }\n      );\n    }\n  });\n  extentHandle = view.watch(\"extent\", () => {\n    overview.graphics.removeAll();\n    overview.graphics.add(\n      new Graphic({\n        geometry: view.extent,\n        symbol: new SimpleFillSymbol({\n          color: [0, 0, 0, 0.25],\n          style: \"solid\",\n          outline: {\n            width: 1,\n            color: [255, 255, 255, 1],\n          },\n        }),\n      })\n    );\n    if (!geometryEngine.intersects(overview.extent, view.extent)) {\n      overview.goTo(\n        { target: view.extent.center, zoom: view.zoom - 4 },\n        { easing: \"ease-out\" }\n      );\n    }\n  });\n};\n\nconst disableNavigation = (overview: __esri.MapView) => {\n  overview.on(\"key-down\", (event) => {\n    const prohibitedKeys = [\"+\", \"-\", \"Shift\", \"_\", \"=\"];\n    const keyPressed = event.key;\n    if (prohibitedKeys.indexOf(keyPressed) !== -1) {\n      event.stopPropagation();\n    }\n  });\n  overview.on(\"mouse-wheel\", (event) => {\n    event.stopPropagation();\n  });\n  overview.on(\"double-click\", (event) => {\n    event.stopPropagation();\n  });\n  overview.on(\"double-click\", [\"Control\"], (event) => {\n    event.stopPropagation();\n  });\n  overview.on(\"drag\", (event) => {\n    event.stopPropagation();\n  });\n  overview.on(\"drag\", [\"Shift\"], (event) => {\n    event.stopPropagation();\n  });\n\n  overview.on(\"drag\", [\"Shift\", \"Control\"], (event) => {\n    event.stopPropagation();\n  });\n};\n","import React, { useEffect, useRef } from \"react\";\nimport MapView from \"@arcgis/core/views/MapView\";\n\nimport \"./WebMap.css\";\nimport { initializeOverview } from \"./utils/overview\";\nfunction Overview(args: any) {\n  const ref = useRef() as any;\n  const loaded = useRef(false);\n  const overview = useRef<MapView | null>(null);\n  const view = useRef<MapView | null>(null);\n\n  useEffect(() => {\n    if (!loaded.current && args.view) {\n      loaded.current = true;\n      const mapView = initializeOverview(ref.current, args.view);\n      overview.current = mapView;\n      view.current = args.view;\n    }\n    return () => {\n      overview.current && overview.current?.destroy();\n    };\n  }, []);\n\n  return <div id=\"overview-map\" ref={ref}></div>;\n}\n\nexport default React.memo(Overview);\n"],"names":["stationaryHandle","extentHandle","addWatches","view","overview","watch","stationary","goTo","target","extent","center","zoom","easing","graphics","removeAll","add","Graphic","geometry","symbol","SimpleFillSymbol","color","style","outline","width","geometryEngine","intersects","disableNavigation","on","event","keyPressed","key","indexOf","stopPropagation","Overview","args","ref","useRef","loaded","useEffect","current","mapView","map","Map","basemap","MapView","container","navigation","mouseWheelZoomEnabled","browserTouchPanEnabled","momentumEnabled","ui","remove","when","clone","expand","find","expanded","initializeOverview","destroy","id","React"],"sourceRoot":""}