{"version":3,"file":"static/js/1468.0dd37ee5.chunk.js","mappings":"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","sources":["components/WebMap/Coordinates/utils/useCoordinates.ts","components/WebMap/Coordinates/Coodinates.tsx"],"sourcesContent":["import { useEffect, useRef, useState, useCallback } from \"react\";\nimport * as coordinateFormatter from \"@arcgis/core/geometry/coordinateFormatter\";\nimport * as projection from \"@arcgis/core/geometry/projection\";\n\nimport Point from \"@arcgis/core/geometry/Point\";\n  \nconst useCoordinates = (args: any) => {\n    const loaded = useRef(false);\n    const x = useRef<any>(null)\n    const y = useRef<any>(null)\n    const other = useRef<any>(null)\n    const [coordinates, setCoordinates] = useState('')\n    const [showSettings, setShowSettings] = useState(false);\n    const [showSearch, setShowSearch] = useState(false);\n    let moveHandler: IHandle;\n    let clickHandler: IHandle;\n    const formats = [\n      {value: 'dd', label: 'Decimal Degrees'},\n      {value: 'dms', label: 'Degrees Minutes Seconds'},\n      {value: 'spft', label: 'Stateplane Feet'},\n      {value: 'usng', label: 'US National Grid'},\n      {value: 'mgrs', label: 'MGRS'},\n      {value: 'utm', label: 'UTM'}\n    ];\n\n    const [selectedFormat, setSelectedFormat] = useState('dd');\n    const formatRef = useRef('dd');\n    const settingsClicked = useCallback((e: any) => {\n      setShowSettings(prevSettings => {\n        return !prevSettings;\n      });\n    }, []);\n    const searchClicked = useCallback((e: any) => {\n      setShowSearch(prevSearch => {\n        return !prevSearch;\n      });\n    }, []);    \n    const modeClicked = useCallback((e: any) => {\n      e.target.active = !e.target.active;\n      if (e.target.active) {\n        moveHandler?.remove();\n        addClickHandler(args.view, args.clickActivated);\n      } else {\n        clickHandler?.remove();    \n        (args.view as __esri.MapView).popup.autoOpenEnabled = true;\n        document.querySelector(\".identify-widget\")?.classList.add(\"active\");\n        addMoveHandler();    \n      }\n    }, []);        \n    const formatChanged = useCallback((e: any) => {\n      console.log(e.target.value);\n      setSelectedFormat(e.target.value);\n      formatRef.current = e.target.value;\n    }, [formatRef]);\n    const searchCoordinates = useCallback((e: any) => {\n      coordinateFormatter.load().then(() => {\n        let point = null;\n        let valid = true;\n        if (formatRef.current === 'dd') {\n          if (isFinite(y.current.value) && Math.abs(y.current.value) <= 90) {\n            y.current.setAttribute('status', 'valid');\n            valid=false;\n          } else {\n            y.current.setAttribute('status', 'invalid');\n          }\n          if (isFinite(x.current.value) && Math.abs(x.current.value) <= 180) {\n            x.current.setAttribute('status', 'valid');\n            valid=false;\n  \n          } else {\n            x.current.setAttribute('status', 'invalid');\n          }\n          point = new Point({x: x.current.value, y: y.current.value, spatialReference: {wkid: 4326}});\n        }\n        if (formatRef.current === 'dms') {\n          const statusX = validateDms(true, y.current.value);\n          y.current.setAttribute('status', statusX);\n          const statusY = validateDms(false, x.current.value);\n          x.current.setAttribute('status', statusY);\n          valid = statusX === 'valid' && statusY === 'valid';\n          \n          point = coordinateFormatter.fromLatitudeLongitude(`${y.current.value} ${x.current.value}`);\n  \n        }      \n        if (formatRef.current === 'spft') {\n          point = new Point({x: x.current.value, y: y.current.value, spatialReference: {wkid: 4326}});        \n          point = projection.project(point, args.view.map.spatialReference) as Point;\n        }\n        if (formatRef.current === 'usng') {\n          point = coordinateFormatter.fromUsng(other.current.value, args.view.map.spatialReference);\n        }          \n        if (formatRef.current === 'mgrs') {\n          point = coordinateFormatter.fromMgrs(other.current.value, args.view.map.spatialReference, 'automatic');\n  \n        }      \n        if (formatRef.current === 'utm') {\n          point = coordinateFormatter.fromUtm(other.current.value, args.view.map.spatialReference, 'latitude-band-indicators');\n  \n        }          \n             \n        if (valid) {\n          args.view.goTo(point);\n        }\n        \n      });\n    }, []);    \n    const validateDms= (latitude: boolean, value: string) : string => {\n      const regex = latitude ? /^((90[°|\\s]\\s*)(0{1,2}['|\\s]\\s*)(0{1,2}([.|,]0{1,20})?[\"|\\s]\\s*)|(([1-8]\\d|\\d)[°|\\s]\\s*)(([0-5]\\d|\\d)['|\\s]\\s*)(([0-5]\\d|\\d)([.|,]\\d{1,20})?[\"|\\s]\\s*))$/gm\n      : /^[-]((180[°|\\s]\\s*)(0{1,2}['|\\s]\\s*)(0{1,2}([.|,]0{1,20})?[\"|\\s]\\s*)|((1[0-7]\\d|\\d\\d|\\d)[°|\\s]\\s*)(([0-5]\\d|\\d)['|\\s]\\s*)(([0-5]\\d|\\d)([.|,]\\d{1,20})?[\"|\\s]\\s*))/gm;\n      return regex.test(`${value} `) ? 'valid' : 'invalid';\n    }\n    const displayCoordinates = (e: any) => {\n      const point = args.view.toMap({x: e.x, y: e.y});\n      const wgs84 = new Point({x: point.longitude, y: point.latitude, spatialReference: {wkid: 4326}});\n      if (formatRef.current === 'dd') {\n        let dd = coordinateFormatter.toLatitudeLongitude(wgs84, 'dd', 7).replaceAll('078.', '78.');\n        let ddSplit = dd.split(' ');\n        if (ddSplit[0].includes('S')) {\n          ddSplit[0] = `-${ddSplit[0].replace('S','')}`;\n        }\n        if (ddSplit[0].includes('N')) {\n          ddSplit[0] = `${ddSplit[0].replace('N','')}`;\n        }     \n        if (ddSplit[1].includes('W')) {\n          ddSplit[1] = `-${ddSplit[1].replace('W','')}`;\n        }\n        if (ddSplit[1].includes('E')) {\n          ddSplit[1] = `${ddSplit[1].replace('N','')}`;\n        }                        \n        setCoordinates(ddSplit.join(' '));\n      } else if (formatRef.current === 'dms') {\n        \n        const dmsSplit = coordinateFormatter.toLatitudeLongitude(wgs84, 'dms', 7).split(' ');\n        const dms = `${dmsSplit[0]}° ${dmsSplit[1]}' ${dmsSplit[2].replace('N', '\"')} -${dmsSplit[3].substring(1)}° ${dmsSplit[4]}' ${dmsSplit[5].replace('W', '\"')}`;\n\n        setCoordinates(dms);\n      } else if (formatRef.current === 'usng') {\n        setCoordinates(coordinateFormatter.toUsng(wgs84, 5, true));\n      } else if (formatRef.current === 'mgrs') {\n        setCoordinates(coordinateFormatter.toMgrs(wgs84, 'automatic', 5, true));\n      } else if (formatRef.current === 'utm') {\n        setCoordinates(coordinateFormatter.toUtm(wgs84, 'latitude-band-indicators', true));\n      } else if (formatRef.current === 'spft') {\n        const spft = projection.project(point, {wkid: 2264}) as Point;\n        setCoordinates(`${spft.x.toString()}E, ${spft.y.toString()}N`);\n\n      }\n    }\n    const addClickHandler = (view: __esri.MapView, clickActivated: Function) => {\n      clickActivated(view);\n      (args.view as __esri.MapView).popup.autoOpenEnabled = false;\n      document.querySelector(\".identify-widget\")?.classList.remove(\"active\");      \n      clickHandler = (args.view as __esri.MapView).on('click', (e: any) => {\n        displayCoordinates(e);\n      });\n    }\n    const addMoveHandler = () => {\n      moveHandler = (args.view as __esri.MapView).on('pointer-move', (e: any) => {\n        displayCoordinates(e);\n      });\n    }      \n    \n    useEffect(() => {\n      if (!loaded.current && args.view) {\n        loaded.current = true;\n        if (args.expand) {\n          if (!args.expand.hasHandles()) {\n            (args.expand as __esri.Expand).watch('expanded', (expanded) => {\n              if (!expanded) {\n                debugger\n                moveHandler?.remove();\n                clickHandler?.remove();\n              }\n            });\n          }\n    \n        }        \n        addMoveHandler();\n        \n      return () => {\n          // clean up the map view\n          // if (view.current) {\n          //   console.log('destroy')\n          //   view.current.destroy();\n          //   view.current = null;\n          // }\n      };\n    }},[]);\n\n    return {loaded, coordinates, settingsClicked, showSettings, formats, formatChanged, searchClicked, showSearch, selectedFormat,searchCoordinates, x, y, other, modeClicked}\n};\n\nexport default useCoordinates;\n\n","import { CalciteAction, CalciteButton, CalciteInput, CalciteInputMessage, CalciteLabel, CalciteOption, CalciteSelect } from \"@esri/calcite-components-react\";\nimport React from \"react\";\nimport \"./Coordinates.css\";\nimport useCoordinates from \"./utils/useCoordinates\";\nfunction Coordinates(args: any) {\n  const {loaded, coordinates, settingsClicked, showSettings, formats, formatChanged, searchClicked, showSearch, selectedFormat, searchCoordinates, x, y, other, modeClicked} = useCoordinates(args);\n  return <div id=\"coordinatesWidget\">\n    <div hidden={showSettings ? undefined : true}>\n      <CalciteSelect scale=\"s\" label=\"Coordinate Systems\" onCalciteSelectChange={formatChanged}>\n        {formats.map(format => {return (<CalciteOption key={format.value} value={format.value}>{format.label}</CalciteOption>)})}\n      </CalciteSelect>\n    </div>\n    <div  hidden={showSearch ? undefined : true}>\n      <CalciteLabel  scale=\"s\">\n        {selectedFormat === 'dd' ? 'Latitude' : selectedFormat === 'spft' ? 'Northing' : selectedFormat === 'dms' ? 'Latitude' : ''}\n      <CalciteInput scale=\"s\" ref={y} hidden={['dd', 'spft', 'dms'].includes(selectedFormat) ? undefined : true}  id=\"ycoord\"\n        placeholder={selectedFormat === 'dd' ? '-78.8079653' : selectedFormat === 'spft' ? '731166.165' : selectedFormat === 'dms' ? `35° 45' 29.7116777\"` : ''}      \n      ></CalciteInput>\n        <CalciteInputMessage hidden={y.current?.getAttribute('status') === 'invalid' ? undefined : true} status=\"invalid\">Value is not valid</CalciteInputMessage>\n\n      </CalciteLabel>\n      <CalciteLabel scale=\"s\">\n        {selectedFormat === 'dd' ? 'Longitude' : selectedFormat === 'spft' ? 'Easting' : selectedFormat === 'dms' ? 'Longitude' : ''}\n        <CalciteInput scale=\"s\" ref={x} hidden={['dd', 'spft', 'dms'].includes(selectedFormat) ? undefined : true} id=\"xcoord\"\n        placeholder={selectedFormat === 'dd' ? '35.7582196' : selectedFormat === 'spft' ? '2056872.973' : selectedFormat === 'dms' ? `-78° 48' 31.524\"`:'' }\n        ></CalciteInput>\n        <CalciteInputMessage hidden={x.current?.getAttribute('status') === 'invalid' ? undefined : true} status=\"invalid\">Value is not valid</CalciteInputMessage>\n      </CalciteLabel>      \n      <CalciteInput scale=\"s\" ref={other} hidden={['dd', 'spft', 'dms'].includes(selectedFormat) ? true : undefined} id=\"othercoord\"\n        placeholder={selectedFormat === 'usng' ? '17S PV 98178 59368' : selectedFormat === 'mrgs' ? '17S PV 98136 59346' : selectedFormat === 'utm' ? '17S 698184 3959363' : ''}      \n      \n      ></CalciteInput>            \n      <CalciteButton onClick={searchCoordinates} width=\"full\" scale=\"s\">Search</CalciteButton>\n    </div>    \n    <div className=\"coordinates-row\">\n    <div className=\"coordinates-text\">{coordinates}</div>\n    <CalciteAction scale=\"s\" text=\"\" icon=\"search\" active={showSearch ? true : undefined} onClick={searchClicked}></CalciteAction>\n    <CalciteAction scale=\"s\" text=\"\" icon=\"gear\" onClick={settingsClicked} active={showSettings || showSearch ? true : undefined}></CalciteAction>\n    <CalciteAction scale=\"s\" text=\"\" icon=\"pin\" onClick={modeClicked}></CalciteAction>\n\n    </div>\n\n  </div>;\n}\n\nexport default React.memo(Coordinates);\n"],"names":["args","loaded","useRef","x","y","other","coordinates","setCoordinates","useState","showSettings","setShowSettings","showSearch","setShowSearch","moveHandler","clickHandler","selectedFormat","setSelectedFormat","formatRef","settingsClicked","useCallback","e","prevSettings","searchClicked","prevSearch","modeClicked","target","active","remove","addClickHandler","view","clickActivated","popup","autoOpenEnabled","document","querySelector","classList","add","addMoveHandler","formatChanged","console","log","value","current","searchCoordinates","coordinateFormatter","then","point","valid","isFinite","Math","abs","setAttribute","Point","spatialReference","wkid","statusX","validateDms","statusY","projection","map","goTo","latitude","test","displayCoordinates","toMap","wgs84","longitude","ddSplit","replaceAll","split","includes","replace","join","dmsSplit","dms","substring","spft","toString","on","useEffect","expand","hasHandles","watch","expanded","formats","label","Coordinates","useCoordinates","id","hidden","undefined","scale","onCalciteSelectChange","format","ref","placeholder","getAttribute","status","onClick","width","className","text","icon","React"],"sourceRoot":""}