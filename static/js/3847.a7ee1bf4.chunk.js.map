{"version":3,"file":"static/js/3847.a7ee1bf4.chunk.js","mappings":"0RAcA,IAAIA,EACAC,EACAC,EACAC,EACAC,EA+BAC,EACAC,EACAC,EAEAC,EAEAC,EACAC,EACAC,EACAC,EAvCAC,EAAuB,GACvBC,EAAa,IAAIC,EAAAA,EAAiB,CACpCC,MAAO,CAAC,IAAK,EAAG,EAAG,IACnBC,MAAO,QACPC,QAAS,CACPC,MAAO,EACPH,MAAO,CAAC,IAAK,EAAG,EAAG,MAGnBI,EAAa,IAAIC,EAAAA,EAAiB,CACpCF,MAAO,EACPH,MAAO,CAAC,IAAK,EAAG,EAAG,GACnBC,MAAO,QACPK,IAAK,QACLC,KAAM,UAEJC,EAAa,IAAIC,EAAAA,EAAW,CAC9BT,MAAO,CAAC,IAAK,EAAG,EAAG,GACnBU,UAAW,CAAC,IAAK,IAAK,IAAK,GAC3BC,SAAU,MACVC,KAAM,GACNC,QAAS,EACTC,QAAS,EACTC,KAAM,CAEJC,KAAM,GACNC,OAAQ,SACRC,OAAQ,UAmEZ,SAASC,EACPC,EACAC,EACAC,GAEA,MAAMC,EAAW,IAAIC,EAAAA,EAAgB,CACnCH,OACAD,QACAK,sBAAsB,IAMxB,OAJAF,EAASG,GAAG,SAAUC,GAIfJ,CACR,CAED,SAASI,EAAWC,GACF,aAAZA,EAAEC,QAC4B,YAA5BD,EAAEE,QAAQC,SAASC,OACrBJ,EAAEE,QAAQG,OAASnC,EACnBV,EAAYF,aAAagD,IAAIN,EAAEE,SAG/BtC,EAAuB2C,OAAOP,EAAEQ,OAGF,aAA5BR,EAAEE,QAAQC,SAASC,OACrBJ,EAAEE,QAAQG,OAAS7B,EACnBhB,EAAYH,cAAciD,IAAIN,EAAEE,SAChCvC,EAAwB4C,OAAOP,EAAEQ,OAEd,SAAjBvC,IACF+B,EAAEE,QAAQG,OAASzB,EACnBpB,EAAYD,UAAU+C,IAAIN,EAAEE,SAC5BrC,EAAoB0C,OAAO,UAER,UAAjBtC,IACF+B,EAAEE,QAAQG,OAAS5C,EACnBD,EAAYJ,WAAWkD,IAAIN,EAAEE,SAC7BxC,EAAqB6C,OAAO,UAE1BxC,GACFA,EAAW0C,SAEb1C,EAAaD,EAAgB4C,UAAUV,EAAEE,SACzClC,EAAqBgC,EAAEE,QAE1B,CAEM,SAASS,EACdH,EACAI,EACAC,GAEA5C,EAAeuC,EACaK,EAA5BL,IAASI,EAAuC,GAA0BJ,GACjD,KAArBI,GACFE,IAEE,CAAC,UAAW,YAAa,UAAUC,SAASP,IAC9C5C,EAAuB2C,OAAOC,GAE5B,CAAC,YAAYO,SAASP,IACxB7C,EAAwB4C,OAAOC,GAEpB,SAATA,GACF7C,EAAwB4C,OAAO,SAEpB,UAATC,GACF7C,EAAwB4C,OAAO,QAElC,CACD,IAAIS,GAAwB,EACrB,SAASC,EACdC,EACAC,EACA5C,GAEA,MAAM6C,EAAUC,SAASC,eAAe,mBACpCF,IAAYJ,IACd9C,EAAWE,MAAQ8C,EACnBhD,EAAWI,QAAQF,MAAQ+C,EAC3BjD,EAAWI,QAAQC,MAAQA,EACvBX,IACFA,EAAuB2D,iBAAmBrD,EACtCV,EAAYF,cACdkE,EAA+BhE,EAAYF,aAAcY,IAG7D8C,GAAwB,EACxBI,EAAQK,UAAY,GACpBC,EAAAA,GACqBxD,EAAY,CAC7ByD,KAAMP,EACNhC,KAAM,KAEPwC,MAAK,IAAOZ,GAAwB,IAE1C,CAED,SAASQ,EACPhC,EACAa,GAEIrC,IACFwB,EAAMiB,OAAOzC,GACbA,EAAmBqC,OAASA,EAC5BrC,EAAqBA,EAAmB6D,QACxCrC,EAAMc,IAAItC,GACVD,EAAaD,EAAgB4C,UAAU1C,GAE1C,CAEM,SAAS8D,EAAmBzB,EAAajC,EAAcgB,IAC5D2C,EAAAA,EAAAA,SAAS,GAAE1B,EAAO2B,MAAM3B,EAAO4B,OAAOC,QAAQ,IAAK,OAAON,MAAMO,IAE9D1E,EAAc,IAAI2E,EAAAA,EAAU,CAC1BC,KAAM,CACJjC,KAAM,qBACNC,OAAM,OAAE8B,QAAF,IAAEA,OAAF,EAAEA,EAAKE,QAGjBC,EAAAA,GAAmC7E,EAAaW,GAChDkE,EAAAA,GAAgC7E,EAAa2B,GACzC5B,EAAYJ,YACdoE,EAA+BhE,EAAYJ,WAAYK,GAEzDC,EAAqBD,YAAcA,EACnC,MAAM2D,EAAUC,SAASC,eAAe,gBACpCF,IACFA,EAAQK,UAAY,GACpBC,EAAAA,GAA8BjE,EAAa,CACzCkE,KAAMP,EACNhC,KAAMA,IAET,GAEJ,CAEM,SAASmD,EAAsBC,EAAkBjE,GACtDC,EAAWJ,MAAQoE,EACnBhE,EAAWD,MAAQA,EACfZ,IACFA,EAAwB8E,eAAiBjE,EAEzCb,EAAwB+E,eAAeC,SAASzC,IAC9CA,EAAQG,OAAS7B,CAAjB,IAEEhB,EAAYH,eACdmE,EAA+BhE,EAAYH,cAAemB,IAI9D,MAAM4C,EAAUC,SAASC,eAAe,gBACpCF,IACFA,EAAQK,UAAY,GACpBC,EAAAA,GAA8BlD,EAAY,CACxCmD,KAAMP,EACNhC,KAAMb,IAGX,CAEM,SAASqE,EACdC,EACAC,EACA/D,EACAD,EACAiE,EACAC,GAEApE,EAAWR,MAAQ0E,EACnBlE,EAAWO,KAAKC,KAAOyD,EACvBjE,EAAWE,UAAYA,EACvBF,EAAWG,SAAWgE,EAAWhE,EAAW,EAC5CH,EAAWI,KAAOgE,EAClBnF,EAAoBJ,YAAcmB,EAC9BpB,EAAYD,WACdiE,EAA+BhE,EAAYD,UAAWqB,EAEzD,CAEM,SAASkC,IACdpD,EAAqBuF,SACrBtF,EAAwBsF,SACxBrF,EAAuBqF,SACvBpF,EAAoBoF,QACrB,C,0BC9RD,SAASC,EAAYC,GACnB,MAAMC,GAAUC,EAAAA,EAAAA,QAAkC,MAC5CC,GAASD,EAAAA,EAAAA,QAAsC,OAC9CjF,EAAOmF,IAAYC,EAAAA,EAAAA,aACnBC,EAAcC,IAAmBF,EAAAA,EAAAA,UAAc,GAQtD,OAPAG,EAAAA,EAAAA,YAAU,MACHvF,GAAS+E,EAAK/E,QACjBmF,EAAS,IAAIK,EAAAA,EAAMT,EAAK/E,QACxBsF,EAAsC,KAArB,EAAIP,EAAK/E,MAAM,KACjC,GACA,CAAC+E,EAAK/E,SAGP,iBAAKyF,GAAIV,EAAKU,GAAd,WACE,UAAC,KAAD,WACGV,EAAKW,MADR,UAEE,SAAC,KAAD,CACED,GAAK,GAAEV,EAAKU,oBACZtF,MAAM,OACNwF,QAAQ,SACR3F,MAAM,UACN4F,WAAW,UALb,UAOE,SAAC,KAAD,CACE5F,MAAK,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAO6F,gBAIpB,SAAC,KAAD,CACE9B,IAAKiB,EACLc,mBAAmB,QACnBC,UAAU,cACVL,MAAO,GACPM,iBAAmB,GAAEjB,EAAKU,oBAL5B,UAOE,UAAC,KAAD,CAAcQ,QAAQ,QAAtB,WACE,SAAC,KAAD,CACEC,KAAK,IACLtF,KAAK,GACLuF,KAAK,qBACLC,QAAS,KAAO,IAAD,EACb,UAAApB,EAAQqB,eAAR,SAAiBC,SACjB,MAAMC,EAAI,IAAIf,EAAAA,EAAMxF,GACpBuG,EAAEC,EAAI,EAAInB,EAAe,IACzBN,EAAK0B,SAASF,EAAd,KAGJ,SAAC,KAAD,CACExC,IAAKmB,EACLwB,WAAS,EACTC,SAAO,EACPC,cAAY,EACZC,MAAO7G,EAAQA,EAAM6F,QAAU,UAC/BiB,0BAA4BlF,GAC1BuD,EAAS,IAAIK,EAAAA,EAAM5D,EAAEmF,OAAOF,gBAgBlC9B,EAAKiC,mBACL,UAAC,KAAD,WACGjC,EAAKW,MADR,iBAEE,iBAAKuB,UAAU,eAAf,WACE,SAAC,KAAD,CACEC,IAAK,IACLC,IAAK,EACLN,MAAOxB,EACP+B,qBAAuBxF,IACrB,IAAIiF,EAAgBjF,EAAEmF,OAAOF,MACzBA,EAAQ,MACVA,EAAQ,KAENA,EAAQ,IACVA,EAAQ,GAEVvB,EAAgBuB,GAChB,MAAMN,EAAI,IAAIf,EAAAA,EAAMxF,GACpBuG,EAAEC,EAAI,EAAInB,EAAe,IACzBN,EAAK0B,SAASF,EAAd,KAGJ,SAAC,IAAD,CACEW,IAAK,IACLC,IAAK,EACLnF,KAAK,SACLqF,iBAAiB,OACjBC,WAAW,IACXT,MAAOxB,EACPkC,oBAAsB3F,IACpB,IAAIiF,EAAgBW,SAAS5F,EAAEmF,OAAOF,OAClCA,EAAQ,MACVA,EAAQ,KAENA,EAAQ,IACVA,EAAQ,GAGVvB,EAAgBuB,GAChB,MAAMN,EAAI,IAAIf,EAAAA,EAAMxF,GACpBuG,EAAEC,EAAI,EAAInB,EAAe,IACzBN,EAAK0B,SAASF,EAAd,YAQf,CAED,QAAekB,EAAAA,KAAW3C,GChI1B,SAAS4C,EAAW3C,GAClB,MAAO8B,EAAOc,IAAYvC,EAAAA,EAAAA,YAI1B,OAHAG,EAAAA,EAAAA,YAAU,KACRoC,EAAS5C,EAAK8B,MAAd,GACC,CAAC9B,EAAK8B,SAEP,UAAC,KAAD,WACG9B,EAAKW,OACN,iBAAKuB,UAAU,eAAf,WACE,SAAC,KAAD,CACEC,IAAKnC,EAAKmC,IACVC,IAAKpC,EAAKoC,IACVN,MAAOA,EACPO,qBAAuBxF,IACrB+F,EAAS/F,EAAEmF,OAAOF,OAClB9B,EAAK6C,QAAQhG,EAAEmF,OAAOF,MAAtB,KAGJ,SAAC,IAAD,CACE7E,KAAK,SACLqF,iBAAiB,OACjBF,IAAKpC,EAAKoC,IACVD,IAAKnC,EAAKmC,IACVL,MAAOA,EACPS,WAAW,KACXC,oBAAsB3F,IACpB+F,EAASE,WAAWjG,EAAEmF,OAAOF,QAC7B9B,EAAK6C,QAAQC,WAAWjG,EAAEmF,OAAOF,OAAjC,SAMX,CACD,QAAeY,EAAAA,KAAWC,GCnC1B,SAASI,EAAY/C,GACnB,MAAOX,EAAW2D,IAAgB3C,EAAAA,EAAAA,UAAgB,IAAII,EAAAA,EAAM,CAAC,IAAK,EAAG,EAAG,MACjErF,EAAO6H,IAAY5C,EAAAA,EAAAA,UAAS,GAMnC,OALAG,EAAAA,EAAAA,YAAU,KACJnB,GAAajE,GACf4E,EAAKZ,sBAAsBC,EAAWjE,EACvC,GACA,CAACiE,EAAWjE,KAEb,iBAAKsF,GAAG,eAAR,WACE,gBAAKA,GAAG,eAAewB,UAAU,aAEjC,SAAC,EAAD,CACExB,GAAG,OACHC,MAAM,OACN1F,MAAOoE,EAAU6D,SACjBxB,SAAWF,IACTwB,EAAaxB,GACbxB,EAAKZ,sBAAsBoC,EAAGpG,EAA9B,KAGJ,SAAC,EAAD,CACE0G,MAAO1G,EACPgH,IAAK,GACLD,IAAK,GACLxB,MAAM,QACNkC,QAAU5G,IACRgH,EAAShH,GACT+D,EAAKZ,sBAAsBC,EAAWjE,EAAtC,MAKT,CAED,QAAesH,EAAAA,KAAWK,GCrC1B,SAASI,EAAenD,GACtB,MAAOjC,EAAWqF,IAAgB/C,EAAAA,EAAAA,UAChC,IAAII,EAAAA,EAAM,CAAC,IAAK,EAAG,EAAG,OAEjBzC,EAAcqF,IAAmBhD,EAAAA,EAAAA,UACtC,IAAII,EAAAA,EAAM,CAAC,IAAK,EAAG,EAAG,MAEjBrF,EAAO6H,IAAY5C,EAAAA,EAAAA,UAAS,GAMnC,OALAG,EAAAA,EAAAA,YAAU,KACJzC,GAAaC,GAAgB5C,GAC/B4E,EAAKlC,qBAAqBC,EAAWC,EAAc5C,EACpD,GACA,CAAC2C,EAAWC,EAAc5C,KAE3B,iBAAKsF,GAAG,kBAAR,WACE,gBAAKA,GAAG,kBAAkBwB,UAAU,aACpC,SAAC,EAAD,CACExB,GAAG,eACHzF,MAAO8C,EAAUmF,SACjBvC,MAAM,OACNe,SAAWF,IACT4B,EAAa5B,GACbxB,EAAKlC,qBAAqB0D,EAAGxD,EAAc5C,EAA3C,KAGJ,SAAC,EAAD,CACEsF,GAAG,kBACHzF,MAAO+C,EAAakF,SACpBvC,MAAM,UACNe,SAAWF,IACT6B,EAAgB7B,GAChBxB,EAAKlC,qBAAqBC,EAAWyD,EAAGpG,EAAxC,KAGJ,SAAC,EAAD,CACEuF,MAAM,gBACNyB,IAAK,GACLD,IAAK,GACLL,MAAO1G,EACPyH,QAAU5G,IACRgH,EAAShH,GACT+D,EAAKlC,qBAAqBC,EAAWC,EAAc5C,EAAnD,MAKT,CAED,QAAesH,EAAAA,KAAWS,GC5C1B,SAASG,EAAYtD,GACnB,MAAOL,EAAW4D,IAAgBlD,EAAAA,EAAAA,UAAgB,IAAII,EAAAA,EAAM,CAAC,IAAK,EAAG,EAAG,MACjEf,EAAU8D,IAAenD,EAAAA,EAAAA,UAAS,KAClCT,EAAU6D,IAAepD,EAAAA,EAAAA,WAAS,IAClCzE,EAAU8H,IAAerD,EAAAA,EAAAA,UAAS,IAClC1E,EAAWgI,IAAgBtD,EAAAA,EAAAA,UAChC,IAAII,EAAAA,EAAM,CAAC,IAAK,IAAK,IAAK,MAErBZ,EAAa+D,IAAkBvD,EAAAA,EAAAA,UAAS,IAE/C,OACE,iBAAKK,GAAG,eAAR,WACE,UAAC,KAAD,mBAEE,SAAC,IAAD,CACEzD,KAAK,WACL4G,MAAM,IACN/B,MAAOjC,EACP2C,oBAAsB3F,IACpB+G,EAAe/G,EAAEmF,OAAOF,MAAxB,EAEFgC,qBAAuBjH,IACrBkH,uBAAsB,KACpB/D,EAAKP,kBACHC,EACAC,EACA/D,EACAD,EACAiE,EACAC,EANF,GADF,QAaN,SAAC,EAAD,CACEa,GAAG,OACHC,MAAM,OACN1F,MAAO0E,EAAUuD,SACjBjB,kBAAgB,EAChBP,SAAWF,IACT+B,EAAa/B,GACbxB,EAAKP,kBACHC,EACA8B,EACA5F,EACAD,EACAiE,EACAC,EANF,KAUJ,UAAC,KAAD,wBAEE,SAAC,IAAD,CACE5C,KAAK,SACLmF,IAAK,EACLD,IAAK,IACLL,MAAOpC,EAASsE,WAChBxB,oBAAsB3F,IACpB2G,EAAYV,WAAWjG,EAAEmF,OAAOF,QAChC9B,EAAKP,kBACHC,EACAC,EACA/D,EACAD,EACAiE,EACAC,EANF,QAWN,UAAC,KAAD,CAAcoE,OAAO,SAArB,kBAEE,SAAC,KAAD,CACEC,UAAStE,QAAkBuE,EAC3BC,sBAAwBvH,IACtB4G,EAAY5G,EAAEmF,OAAOkC,SACrBlE,EAAKP,kBACHC,EACAC,EACA/D,EACAD,EACAiE,EACAC,EANF,QAWN,iBAAKa,GAAG,OAAO2D,QAAQzE,QAAWuE,EAAlC,WACE,SAAC,EAAD,CACEzD,GAAG,OACHC,MAAM,GACN1F,MAAOU,EAAUuH,SACjBjB,kBAAgB,EAChBP,SAAWF,IACTmC,EAAanC,GACbxB,EAAKP,kBACHC,EACAC,EACA/D,EACA4F,EACA5B,EACAC,EANF,KAUJ,UAAC,KAAD,mBAEE,SAAC,IAAD,CACE5C,KAAK,SACLmF,IAAK,EACLD,IAAK,GACLL,MAAOlG,EAASoI,WAChBxB,oBAAsB3F,IACpB6G,EAAYZ,WAAWjG,EAAEmF,OAAOF,QAChC9B,EAAKP,kBACHC,EACAC,EACA/D,EACAD,EACAiE,EACAC,EANF,YAcb,CACD,QAAe6C,EAAAA,KAAWY,G,mCCxI1B,SAASgB,GAAWtE,GAClB,OACE,iBAAKU,GAAG,cAAR,WACE,gBAAKA,GAAG,eAAewB,UAAU,aACjC,SAAC,KAAD,CAAcqC,UAAU,QAAQV,MAAM,IAAII,OAAO,UAAjD,UACE,mBACE/B,UAAU,wBACVjF,KAAK,SACLoE,QAAS,KACPrB,EAAKwE,eAAL,EAJJ,UAOE,iBAAKtC,UAAU,YAAf,UACGlC,EAAK9C,SACJ,gBAAKgF,UAAU,cAAf,UACE,gBACEuC,IAAM,GAAEzE,EAAK9C,OAAO2B,MAAMmB,EAAK9C,OAAOwH,UAAUC,KAAK5F,QACnD,IACA,MAEF6F,IAAK5E,EAAK9C,OAAO2H,MACjBzJ,MAAO,GACP0J,OAAQ,QAKd,gBAAK5C,UAAU,aAAf,SAA6BlC,EAAK9C,OAAO2H,SACzC,SAAC,KAAD,CAAa1D,KAAK,2BAM7B,CAED,SAAeuB,EAAAA,KAAW4B,ICpC1B,SAASS,GAAmB/E,GAC1B,MAAOgF,EAASC,IAAc5E,EAAAA,EAAAA,UAAgB,IAO9C,OANAG,EAAAA,EAAAA,YAAU,KACJwE,GAAWhF,EAAKgF,SAClBC,EAAWjF,EAAKgF,QACjB,GACA,KAGD,gBAAKtE,GAAG,iBAAR,UACE,SAAC,KAAD,CACEwE,gBAAc,EACdhE,QAAQ,gBACRiE,wBAAyB,KACvBnF,EAAKoF,aAAL,EAJJ,UAOE,gBAAKlD,UAAU,UAAf,SACG8C,GACCA,EAAQK,KAAI,CAACnI,EAAaoI,KAEtB,gBACEjE,QAAS,KACPrB,EAAKuF,aAAarI,GAClB8C,EAAKoF,aAAL,EAEFlD,UAAU,OAEV0C,IAAK1H,EAAO2H,MACZJ,IAAM,GAAEvH,EAAO2B,MAAM3B,EAAOwH,UAAUC,KAAK5F,QAAQ,IAAK,OAFlD,QAAOuG,YAU9B,CAED,SAAe5C,EAAAA,KAAWqC,ICxB1B,SAASS,GAAaxF,GACpB,MAAOgF,EAASC,IAAc5E,EAAAA,EAAAA,UAAgB,KACvCnD,EAAQuI,IAAapF,EAAAA,EAAAA,aACrBqF,EAAWC,IAAgBtF,EAAAA,EAAAA,UAAS,IAGrCuF,EAAM,CACV,mCACA,qCAGKC,EAAYC,IAAiBzF,EAAAA,EAAAA,UAAS,SACtC0F,EAAYC,IAAiB3F,EAAAA,EAAAA,UAClC,IAAII,EAAAA,EAAM,CAAC,IAAK,EAAG,EAAG,KAYxB,OATAD,EAAAA,EAAAA,YAAU,MRmRL,SAAoBoF,EAAe/G,GACxC,OAAO,IAAIoH,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAA2B,GAEjCR,EAAIpG,SAASkB,IACX,MAAMxD,EAAyB,IAAImJ,EAAAA,EAAe,CAChDC,SAAW,GAAEzH,KAAO6B,SACpB6F,KAAM,SAERH,EAASI,MAAK5H,EAAAA,EAAAA,SAAQ1B,EAAOoJ,UAA7B,IAEEF,EAASK,OAEb,MAAMC,EAAe,GAErBT,QAAQU,IAAIP,GAAU3H,MAAMmI,IAC1BA,EAAQpH,SAASqH,IACfA,EAAO3H,KAAKwH,MAAMlH,SAASsH,IACzBA,EAAKjI,IAAMgI,EAAOhI,IAAIE,QAAQ,OAAQ,IACtC2H,EAAMF,KAAKM,EAAX,GAFF,IAOFZ,EAAQQ,EAAR,GATF,GAYH,EQ7SGK,CAAWnB,EAZD,sDAYWnH,MAAMiI,IACzBzB,EAAWyB,GACPA,EAAMD,SACRhB,EAAUiB,EAAM,IAChB1G,EAAKrB,mBAAmB+H,EAAM,GAAIX,EAAYL,GAC/C,GALH,GAOC,KAED,gBAAKhF,GAAG,gBAAR,SACGsE,EAAQyB,SACP,2BACkB,SAAfZ,IACC,UAAC,KAAD,YACE,SAAC,GAAD,CACErB,cAAe,IAAMsB,EAAc,QACnC5I,OAAQA,KAEV,SAAC,EAAD,CACEwD,GAAG,QACHC,MAAM,QACN1F,MAAO8K,EAAW7C,SAClBxB,SAAWF,IACTwE,EAAcxE,GACdxB,EAAKrB,mBAAmBzB,EAAQsE,EAAGkE,EAAnC,KAGJ,UAAC,KAAD,mBAEE,SAAC,IAAD,CACEzI,KAAK,SACLmF,IAAK,EACLD,IAAK,GACLL,MAAO4D,EAAU1B,WACjBF,qBAAuBjH,IACrB8I,EAAa7C,WAAWjG,EAAEmF,OAAOF,QACjC9B,EAAKrB,mBACHzB,EACA6I,EACAjD,WAAWjG,EAAEmF,OAAOF,OAHtB,UAUM,SAAf+D,IACC,SAAC,GAAD,CACEN,aAAepE,IACbsE,EAAUtE,GACVnB,EAAKrB,mBAAmBwC,EAAM4E,EAAYL,EAA1C,EAEFN,YAAa,IAAMU,EAAc,QACjCd,QAASA,QAOtB,CAED,SAAetC,EAAAA,KAAW8C,I,eCxE1B,SAASwB,GAAOhH,GACd,MAAMiH,GAAS/G,EAAAA,EAAAA,SAAO,IACfzC,EAAkBC,IAAuB2C,EAAAA,EAAAA,UAAS,KAClD6G,EAAUC,IAAe9G,EAAAA,EAAAA,WAAS,IAElC+G,EAAkBC,IAAuBhH,EAAAA,EAAAA,UAC9C,KAGFG,EAAAA,EAAAA,YAAU,KACHyG,EAAO3F,STuBT,SACLhF,EACAoB,EACA0J,EACAC,GAEAhN,EAAc,IAAIiN,EAAAA,QAAc,CAC9BC,SAAU,OACV7G,GAAI,gBAENpE,EAAK+I,IAAIlI,IAAI9C,GACbiC,EACGkL,cAAcnN,GACdoE,MACEgJ,GAAe9M,EAAkB8M,IAEtCxN,EAAaI,EAAYJ,WACzBC,EAAgBG,EAAYH,cAC5BC,EAAeE,EAAYF,aAE3BC,EAAYC,EAAYD,UAGxBG,EAAuB6B,EAAuBnC,EAAYqC,GAC1D9B,EAA0B4B,EAAuBlC,EAAeoC,GAChE7B,EAAyB2B,EAAuBjC,EAAcmC,GAC9D7B,EAAuB2D,iBAAmBrD,EACzCP,EAAgCkN,iBAAmBrM,EAEpDX,EAAsB0B,EAAuBhC,EAAWkC,GAErC,CACjB/B,EACAC,EACAC,EACAC,GAES8E,SAASmI,IACT,OAATA,QAAS,IAATA,GAAAA,EAAWhL,GAAG,UAAWE,IACP,WAAZA,EAAEC,OAA+C,OAAzB6K,EAAUC,aACpClK,EAAoB,UAChB9C,GACFA,EAAW0C,SAEd,IAEM,OAATqK,QAAS,IAATA,GAAAA,EAAWhL,GAAG,UAAWE,IACP,UAAZA,EAAEC,OAAiC,WAAZD,EAAEC,OAC3BuK,EAAoB,IAAIxK,EAAEgL,UAC3B,GAHH,GAMH,CS1EKC,CACE9H,EAAK1D,KACLoB,EACA0J,EACAC,EAEH,GACA,KACH7G,EAAAA,EAAAA,YAAU,KACR2G,EAAYnH,EAAKkH,SAAjB,GACC,CAAClH,EAAKkH,WACT,MAAMa,GAAgBC,EAAAA,EAAAA,cAAanL,IACjCmD,EAAK+H,gBACLpK,IACAD,EAAoB,GAApB,GACC,IACH,OACE,UAAC,KAAD,CACEgD,GAAG,eACHQ,QAAQ,SACR,aAAW,SACXmD,QAAS6C,EACTe,QAASf,QAAkB/C,EAC3B+D,WAAYhB,QAAkB/C,EAC9BgE,aAAW,EACXC,sBAAuBL,EARzB,WAUE,SAAC,KAAD,CACE5G,KAAK,aACLtF,KAAK,GACLuF,KAAK,qBACLC,QAASgH,GAAAA,MAEX,iBAAK3H,GAAG,eAAR,WACE,iBAAKwB,UAAU,SAAf,WACE,UAAC,KAAD,CAAoB+B,OAAO,aAA3B,WACE,SAAC,KAAD,CACEqE,OAA6B,UAArB7K,QAAsC0G,EAC9ChD,KAAK,MACLtF,KAAM,GACNwF,QAAS,IAAM7D,EAAa,QAASC,EAAkBC,MAEzD,SAAC,KAAD,CACE4K,OAA6B,aAArB7K,QAAyC0G,EACjDhD,KAAK,OACLtF,KAAM,GACNwF,QAAS,IACP7D,EAAa,WAAYC,EAAkBC,MAG/C,SAAC,KAAD,CACE4K,OAA6B,YAArB7K,QAAwC0G,EAChDhD,KAAK,UACLtF,KAAM,GACNwF,QAAS,IAAM7D,EAAa,UAAWC,EAAkBC,MAE3D,SAAC,KAAD,CACE4K,OAA6B,cAArB7K,QAA0C0G,EAClDhD,KAAK,YACLtF,KAAM,GACNwF,QAAS,IACP7D,EAAa,YAAaC,EAAkBC,MAGhD,SAAC,KAAD,CACE4K,OAA6B,WAArB7K,QAAuC0G,EAC/ChD,KAAK,SACLtF,KAAM,GACNwF,QAAS,IAAM7D,EAAa,SAAUC,EAAkBC,MAE1D,SAAC,KAAD,CACE4K,OAA6B,SAArB7K,QAAqC0G,EAC7ChD,KAAK,OACLtF,KAAM,GACNwF,QAAS,IAAM7D,EAAa,OAAQC,EAAkBC,SAG1D,UAAC,KAAD,CAAoBuG,OAAO,aAA3B,WACE,SAAC,KAAD,CACE9C,KAAK,SACLtF,KAAM,GACNyM,OAA6B,WAArB7K,QAAuC0G,EAC/C9C,QAAS,KT6NrB9G,EAAqBuF,SACrBrF,EAAuBqF,SACvBtF,EAAwBsF,SACxBpF,EAAoBoF,SS9NNtC,EAAa,SAAUC,EAAkBC,EAAzC,KAGJ,SAAC,KAAD,CACEyD,KAAK,QACLtF,KAAM,GACNwF,QAAS,KTiLrBhH,EAAYF,aAAa0N,SAASU,YAClClO,EAAYJ,WAAW4N,SAASU,YAChClO,EAAYH,cAAc2N,SAASU,iBACnClO,EAAYD,UAAUyN,SAASU,sBShLzB,gBACE7H,GAAG,gBACHwB,UAAU,SACVmC,OAA6B,UAArB5G,QAAsC0G,EAHhD,UAKE,SAAC,GAAD,CAAcxF,mBAAoBA,OAEpC,gBACE+B,GAAG,eACHwB,UAAU,SACVmC,OAA6B,aAArB5G,QAAyC0G,EAHnD,UAKE,SAAC,EAAD,CACE/E,sBAAuBA,OAG3B,gBACEsB,GAAG,kBACHwB,UAAU,SACVmC,QACG,CAAC,UAAW,YAAa,UAAUzG,SAASH,SAEzC0G,EANR,UASE,SAAC,EAAD,CACErG,qBAAsBA,OAG1B,gBACE4C,GAAG,eACHwB,UAAU,SACVmC,OAA6B,SAArB5G,QAAqC0G,EAH/C,UAKE,SAAC,EAAD,CAAa1E,kBAAmBA,MAEjC2H,EAAiBX,OAAS,IACzB,UAAC,KAAD,CACEpF,QAAS,ITiLd,SACL+F,EACAC,GAEApN,EAAWuO,WAAWpB,GACtBjN,EAAaqO,WAAWpB,GACxBlN,EAAcsO,WAAWpB,GACzBhN,EAAUoO,WAAWpB,GACrBrD,uBAAsB,KACpBsD,GAAqB/F,GACZ,IADT,GAIH,CS7LamH,CAAuBrB,EAAkBC,GAE3C9C,UAAU,SACVtJ,MAAM,MACN4F,WAAW,cACX,WAAS,QAPX,UASGuG,EAAiBX,OAAQ,IACzBW,EAAiBX,OAAS,EAAI,WAAa,kBAMvD,CAED,SAAe/D,EAAAA,KAAWsE,G,waCtLkqD,SAAS0B,EAAE7L,GAAG,OAAOA,EAAE8L,OAAOC,MAAM/L,GAAG,MAAMA,EAAEgM,gBAAgBC,iBAAkB,OAAMC,EAAE,IAAIC,EAAAA,EAAE,CAACzC,KAAK,WAAW0C,MAAM,WAAWhM,KAAK,MAAMiM,UAAS,EAAGC,UAAS,IAAKC,EAAE,IAAIJ,EAAAA,EAAE,CAACzC,KAAK,QAAQ0C,MAAM,QAAQhM,KAAK,SAASiM,UAAS,EAAGC,UAAS,IAAK,IAAIE,EAAE,cAAcC,EAAAA,EAAEC,YAAY1M,GAAG2M,MAAM3M,GAAG4M,KAAKC,eAAe,WAAY,CAAAC,aAAa,IAAI,MAAM9M,KAAK4M,KAAK5B,SAAShL,EAAE+M,YAAYH,KAAKpN,MAAMoN,KAAK5B,SAASlL,GAAG,aAAaE,IAAIA,EAAEiK,KAAK8C,YAAYH,KAAKpN,KAAxB,IAAiCoN,KAAK5B,SAASlL,GAAG,gBAAgBE,IAAIA,EAAEiK,KAAK8C,YAAY,IAAnB,GAA2B,CAAIC,gBAAY,OAAOJ,KAAK5B,QAAS,IAAEhL,EAAAA,EAAAA,GAAE,EAACiN,EAAAA,EAAAA,IAAE,CAACC,UAAS,KAAMV,EAAEW,UAAU,YAAY,OAAMnN,EAAAA,EAAAA,GAAE,EAACiN,EAAAA,EAAAA,OAAKT,EAAEW,UAAU,aAAQ,IAAQnN,EAAAA,EAAAA,GAAE,EAACiN,EAAAA,EAAAA,OAAKT,EAAEW,UAAU,eAAU,IAAQnN,EAAAA,EAAAA,GAAE,EAACiN,EAAAA,EAAAA,IAAE,CAACC,UAAS,KAAMV,EAAEW,UAAU,sBAAiB,GAAQX,GAAExM,EAAAA,EAAAA,GAAE,EAACoN,EAAAA,EAAAA,GAAE,+CAA+CZ,GAAG,MAAMa,EAAE,CAAC,CAACC,aAAa,UAAUC,iBAAiB,sBAAsB1J,GAAG,eAAe2J,QAAQ,EAAExF,MAAM,WAAWyF,mBAAmB,IAAIC,EAAAA,GAAGC,UAAU,CAACL,aAAa,WAAWC,iBAAiB,uBAAuB1J,GAAG,gBAAgB2J,QAAQ,EAAExF,MAAM,YAAYyF,mBAAmB,IAAIG,EAAAA,GAAGD,UAAU,CAACL,aAAa,aAAaC,iBAAiB,yBAAyB1J,GAAG,kBAAkB2J,QAAQ,EAAExF,MAAM,cAAcyF,mBAAmB,IAAII,EAAAA,GAAGF,UAAU,CAACL,aAAa,QAAQC,iBAAiB,oBAAoB1J,GAAG,aAAa2J,QAAQ,EAAExF,MAAM,SAASyF,mBAAmB,IAAII,EAAAA,GAAGF,UAAU,CAACL,aAAa,QAAQC,iBAAiB,oBAAoB1J,GAAG,YAAY2J,QAAQ,EAAExF,MAAM,OAAOyF,mBAAmB,IAAIK,EAAAA,GAAGH,WAAW,IAAII,EAAE,eAAcC,EAAAA,EAAAA,IAAEC,EAAAA,EAAAA,IAAEC,EAAAA,EAAAA,IAAEC,EAAAA,EAAAA,IAAEC,EAAAA,EAAAA,GAAEC,EAAAA,QAAQ3B,YAAY1M,GAAG2M,MAAM3M,GAAG4M,KAAK0B,aAAa,CAACC,WAAW,CAACC,yBAAwB,IAAK5B,KAAK6B,mBAAmB,KAAK7B,KAAK8B,sBAAsB,KAAK9B,KAAK+B,sBAAsB,QAAQ/B,KAAKgC,eAAc,EAAGhC,KAAKiC,SAAS,EAAEjC,KAAKkC,SAAS,EAAElC,KAAKmC,iBAAiBC,EAAAA,EAAAA,MAAQpC,KAAKI,UAAU,IAAIiC,EAAAA,EAAE5B,EAAE7E,KAAKxI,GAAG,IAAIwM,EAAE,CAAC3I,GAAG7D,EAAE6D,GAAG2J,QAAQxN,EAAEwN,QAAQxF,MAAMhI,EAAEgI,MAAMxI,MAAMoN,UAAUA,KAAK5E,MAAM,YAAY4E,KAAKxM,KAAK,YAAYwM,KAAKC,eAAe,WAAY,CAAAqC,iBAAiBlP,EAAEmP,EAAEF,GAAG,MAAM,CAACV,WAAW,CAACC,yBAAyB3C,EAAEsD,IAAI,gBAAgBF,GAAGG,QAAS,CAAAC,uBAAuBrP,EAAEmP,EAAEG,GAAG,IAAIzD,EAAEsD,GAAG,OAAO,KAAK,MAAM1G,EAAE0G,EAAErD,OAAOtD,KAAKxI,IAAI,MAAMmP,EAAE,IAAII,EAAAA,QAAE,OAAOJ,EAAEK,KAAKxP,EAAEsP,GAAGH,CAAnB,IAAwB,OAAO,IAAIF,EAAAA,EAAE,CAACpF,MAAMpB,GAAI,CAAAgH,gCAAgCzP,EAAEmP,GAAG,OAAOtD,EAAEsD,IAAG1G,EAAAA,EAAAA,IAAE0G,EAAEO,mBAAmB,IAAK,CAAAC,eAAe3P,EAAEmP,GAAG,IAAIA,EAAErD,OAAOlC,QAAQuF,EAAErD,OAAO8D,OAAO5P,IAAIA,EAAEgM,gBAAgB6D,SAAS,OAAO,IAAIC,EAAAA,EAAE,CAACC,MAAM,IAAIC,MAAM,GAAGC,KAAK,IAAIC,KAAK,GAAGnB,iBAAiBC,EAAAA,EAAAA,QAAU,MAAMC,EAAED,EAAAA,EAAAA,SAAWG,EAAErD,OAAO,GAAGE,gBAAgB+C,kBAAkB,OAAOI,EAAErD,OAAOqE,QAAQ,CAACnQ,EAAEmP,KAAK,MAAMF,EAAEE,EAAEnD,gBAAgB6D,OAAO,OAAOZ,EAAEa,EAAAA,EAAAA,SAAWb,GAAGmB,MAAMpQ,GAAGA,CAAhC,GAAoC,IAAI8P,EAAAA,EAAE,CAACf,iBAAiBE,IAAK,CAAAoB,aAAarQ,EAAEmP,GAAG,IAAI,MAAMF,KAAKE,EAAErD,OAAO,GAAG,MAAMmD,EAAEjD,gBAAgB6C,SAAS,OAAOI,EAAEjD,gBAAgB6C,SAAS,OAAO,CAAE,CAAAyB,aAAatQ,EAAEmP,GAAG,IAAI,MAAMF,KAAKE,EAAErD,OAAO,GAAG,MAAMmD,EAAEjD,gBAAgB8C,SAAS,OAAOG,EAAEjD,gBAAgB8C,SAAS,OAAO,CAAE,CAAIyB,sBAAkB,OAAO3D,KAAK4D,cAAc,kBAAmB,CAAIpT,iBAAa,OAAOwP,KAAK4D,cAAc,aAAc,CAAIlT,mBAAe,OAAOsP,KAAK4D,cAAc,eAAgB,CAAInT,oBAAgB,OAAOuP,KAAK4D,cAAc,gBAAiB,CAAAC,qBAAqBzQ,EAAEmP,GAAG,OAAOA,EAAErD,OAAOlC,OAAOoF,EAAAA,EAAAA,SAAWG,EAAErD,OAAO,GAAGE,gBAAgB+C,kBAAkBC,EAAAA,EAAAA,KAAQ,CAAA0B,cAAc1Q,EAAEsP,EAAE7G,GAAG,GAAGoD,EAAEyD,GAAG,OAAO,KAAK,MAAM1K,EAAE,GAAG,IAAI+L,EAAErB,EAAExD,OAAOqE,QAAQ,CAACnQ,EAAEmP,IAAIyB,KAAKtL,IAAItF,EAAEmP,EAAEnD,gBAAgBnI,KAAK,KAAK,GAAG,EAAE,IAAI,MAAMmI,gBAAgBiD,EAAE4B,WAAWzC,KAAKkB,EAAExD,OAAO,CAAC,MAAM9L,EAAEiP,EAAE3B,cAAcc,EAAEd,aAAagC,EAAEL,EAAEpL,IAAI8M,IAAIlI,EAAE4E,EAAEyD,MAAM3B,GAAGnP,IAAImP,EAAE5B,kBAAkB0B,EAAE8B,aAAaC,UAAU3Q,QAAQD,OAAO+O,EAAE1B,kBAAkBrN,OAAO,GAAGqI,EAAE,CAAC,MAAMzI,EAAE,IAAIwM,EAAE,CAAC3I,GAAG4E,EAAE5E,GAAGmE,MAAMiH,EAAEvF,KAAK8D,QAAQ8B,EAAE9P,MAAMoN,KAAK5B,SAASoD,EAAE6C,SAASzI,KAAK,QAAErI,SAASH,EAAEK,OAAO4O,EAAEiC,WAAW5B,EAAE6B,UAAU1I,GAA7C,SAAkD0G,EAAAA,EAAAA,SAAW,CAAC+B,WAAW5B,EAAEnP,SAASH,EAAEK,OAAO4O,EAAEmC,cAAc3I,GAA7G,MAAqH7D,EAAE+E,KAAK3J,EAAG,CAAC,QAAO,IAAIiP,EAAAA,EAAErK,EAAG,CAAAyM,eAAerR,EAAEmP,EAAEF,EAAExG,GAAG,MAAMoG,SAAST,EAAEU,SAASwC,GAAG1E,KAAK,IAAGhI,EAAAA,EAAAA,IAAE5E,GAAG,OAAO,MAAMiN,EAAEjN,EAAE+L,MAAM/L,GAAGA,EAAEgL,SAASpB,OAAO,IAAI,IAAIgD,KAAK0B,aAAaC,WAAWC,wBAAwB,YAAYvB,GAAGxE,GAAG8I,UAAU5H,KAAK,IAAI2F,EAAAA,EAAE,wCAAwC,iDAAiD,MAAMkC,EAAE,GAAG,IAAIpE,EAAER,KAAKmC,iBAAiBpB,SAAS3N,EAAE,IAAI,MAAMsP,KAAKtP,EAAE,IAAI,MAAMA,KAAKsP,EAAEtE,SAAS,IAAG2F,EAAAA,EAAAA,IAAE3Q,EAAEG,UAAU,CAACiN,EAAEpN,EAAEG,SAAS4O,iBAAiBpB,SAAS,MAAM3N,CAAE,KAAI,MAAMsP,KAAKjC,EAAE,CAAC,MAAM8B,EAAEnP,EAAE8Q,MAAM9Q,GAAGsP,EAAEzL,KAAK7D,EAAE6D,KAAK+I,KAAK6E,sBAAsBD,EAAErC,EAAEG,EAAElB,EAAEkD,EAAElE,EAAE3E,EAAG,EAAAiJ,EAAAA,EAAAA,IAAE,2BAA2BF,EAAErC,EAAG,CAAI5R,gBAAY,OAAOqP,KAAK4D,cAAc,YAAa,CAAAmB,KAAK3R,GAAG,OAAO4M,KAAKgF,oBAAoBhF,KAAKiF,eAAe,CAACC,eAAe,CAAC,uBAAuB9R,IAAIoJ,QAAQC,QAAQuD,KAAM,CAAA4C,KAAKxP,EAAEmP,GAAG,sBAAsBnP,IAAIA,GAAEyI,EAAAA,EAAAA,IAAEzI,GAAG+R,OAAOC,OAAOhS,EAAEA,EAAE0P,oBAAoB/C,MAAM6C,KAAKxP,EAAEmP,EAAG,CAAgB,mBAAG,IAAGvK,EAAAA,EAAAA,IAAEgI,KAAKI,WAAW,OAAO,IAAIhN,EAAE,KAAK,MAAMmP,EAAE,GAAG,IAAI,MAAMG,KAAK1C,KAAKI,UAAU,IAAI,MAAMiC,KAAKK,EAAEtE,SAAS,IAAG2F,EAAAA,EAAAA,IAAE1B,EAAE9O,UAAU,CAAC,MAAMmP,EAAEL,EAAE9O,SAASH,GAAEiS,EAAAA,EAAAA,IAAE3C,EAAEP,iBAAiB/O,MAAKkS,EAAAA,EAAAA,IAAE5C,EAAEP,iBAAiB/O,KAAImS,EAAAA,EAAAA,aAAWC,EAAAA,EAAAA,MAAInD,EAAE9O,UAASkS,EAAAA,EAAAA,IAAE/C,EAAEtP,IAAIA,EAAEsP,EAAEP,iBAAiBI,EAAExF,KAAKsF,EAAG,OAAMA,QAAQqD,EAAAA,EAAAA,IAAEnD,EAAE3G,KAAKxI,GAAGA,EAAEG,YAAYgP,EAAExM,SAAS,CAAC3C,EAAEmP,IAAInP,EAAEG,SAAS8O,EAAEE,IAAK,CAAAqB,cAAcxQ,GAAG,OAAO4E,EAAAA,EAAAA,IAAEgI,KAAKI,WAAW,KAAKJ,KAAKI,WAAW8D,MAAM3B,GAAGA,EAAEtL,KAAK7D,KAAK,IAAK,CAAAyR,sBAAsBzR,EAAEmP,EAAEF,EAAEK,EAAEqB,EAAEvC,EAAEsD,GAAG,MAAMJ,EAAE,GAAG,KAAI1M,EAAAA,EAAAA,IAAEuK,GAAG,CAAC,IAAI,MAAMnP,KAAKmP,EAAEnE,SAAS4B,KAAK2F,cAAcjB,EAAEtR,EAAEiP,EAAE3B,aAAaoE,GAAG9E,KAAK4F,oBAAoBlB,EAAEpF,GAAGlM,EAAE2J,KAAK,CAACqC,gBAAgB,CAACtC,KAAKyF,EAAEnH,MAAM+I,YAAY,CAACC,SAAS,CAAC5Q,KAAK,SAASC,QAAOoI,EAAAA,EAAAA,IAAEwG,EAAExB,qBAAqB5J,GAAGsL,EAAE3B,QAAQF,aAAa2B,EAAE1B,iBAAiBsB,SAASS,EAAER,SAAS6B,EAAE8B,cAAc,WAAWC,OAAO,CAACxG,EAAEyB,SAASpB,EAAEoB,UAAUoB,iBAAiBX,GAAGyC,WAAW,CAACI,SAASK,EAAEhE,aAAa2B,EAAE1B,mBAAoB,CAAC,CAAAgF,cAAcvS,EAAEmP,EAAEF,EAAEK,GAAG,IAAG1K,EAAAA,EAAAA,IAAEuK,GAAG,OAAO,MAAMhP,SAASsI,EAAEpI,OAAO+N,EAAEgD,cAAcM,GAAGvC,EAAE,IAAGvK,EAAAA,EAAAA,IAAE6D,GAAG,OAAO,GAAGA,EAAErI,OAAO6O,EAAE,YAAYK,GAAGiC,UAAU5H,KAAK,IAAI2H,EAAAA,EAAE,wCAAyC,aAAY7I,EAAErI,6BAA6B6O,WAAW,CAAC/O,QAAQiP,KAAK,IAAGvK,EAAAA,EAAAA,IAAEwJ,GAAG,YAAYkB,GAAGiC,UAAU5H,KAAK,IAAI2H,EAAAA,EAAE,4BAA4B,oCAAoC,CAACpR,QAAQiP,KAAK,MAAMlC,EAAE,CAACiE,WAAW,IAAI/B,EAAE+B,YAAY/Q,SAASsI,EAAEkF,SAAStN,OAAO+N,EAAET,WAAUgD,EAAAA,EAAAA,IAAEe,KAAKzE,EAAEkE,UAAUO,EAAE/D,UAAU3N,EAAE2J,KAAKsD,EAAG,CAAAuF,oBAAoBxS,EAAEmP,GAAG,MAAMF,EAAEE,EAAEzF,KAAK,IAAI4F,GAAEqD,EAAAA,EAAAA,GAAE1D,EAAEjP,GAAG,EAAE,MAAMyI,EAAE,IAAImK,IAAI,IAAI,MAAMhO,KAAK5E,EAAE,CAAC4E,EAAEsM,aAAatM,EAAEsM,WAAW,CAAC,GAAG,MAAMA,WAAWlR,GAAG4E,GAAG,MAAM5E,EAAEiP,IAAIxG,EAAEoK,IAAI7S,EAAEiP,OAAOjP,EAAEiP,GAAGK,KAAK7G,EAAEnI,IAAIN,EAAEiP,GAAI,CAAC,IAAEjP,EAAAA,EAAAA,GAAE,EAACiN,EAAAA,EAAAA,IAAE,CAACC,UAAS,KAAMa,EAAEZ,UAAU,oBAAe,IAAQnN,EAAAA,EAAAA,GAAE,EAACwR,EAAAA,EAAAA,GAAE,CAAC,cAAc,WAAW,eAAe,CAAC,YAAYzD,EAAEZ,UAAU,mBAAmB,OAAMnN,EAAAA,EAAAA,GAAE,EAACiN,EAAAA,EAAAA,IAAE,CAACC,UAAS,KAAMa,EAAEZ,UAAU,0BAAqB,IAAQnN,EAAAA,EAAAA,GAAE,EAACwR,EAAAA,EAAAA,GAAE,CAAC,UAAU,eAAe,qBAAqB,CAAC,YAAYzD,EAAEZ,UAAU,yBAAyB,OAAMnN,EAAAA,EAAAA,GAAE,EAACiN,EAAAA,EAAAA,IAAE,CAACC,UAAS,EAAG4F,KAAK,CAACC,QAAQ,CAAC,UAAU,CAACC,MAAM,CAACC,SAAQ,EAAG9N,OAAO,2BAA2B4I,EAAEZ,UAAU,6BAAwB,IAAQnN,EAAAA,EAAAA,GAAE,EAACwR,EAAAA,EAAAA,GAAE,CAAC,UAAU,eAAe,wBAAwB,CAAC,uBAAuBzD,EAAEZ,UAAU,kCAAkC,OAAMnN,EAAAA,EAAAA,GAAE,EAACiN,EAAAA,EAAAA,IAAE,CAACC,UAAS,EAAG4F,KAAK,CAACtD,MAAK,EAAGwD,MAAM,CAACC,SAAQ,EAAGC,cAAa,OAAQnF,EAAEZ,UAAU,6BAAwB,IAAQnN,EAAAA,EAAAA,GAAE,EAACiN,EAAAA,EAAAA,IAAE,CAAC6F,KAAK,CAACE,OAAM,MAAOjF,EAAEZ,UAAU,kBAAa,IAAQnN,EAAAA,EAAAA,GAAE,EAACwR,EAAAA,EAAAA,GAAE,CAAC,UAAU,eAAe,aAAa,CAAC,YAAYzD,EAAEZ,UAAU,iBAAiB,OAAMnN,EAAAA,EAAAA,GAAE,EAACiN,EAAAA,EAAAA,IAAE,CAACC,UAAS,EAAG4F,KAAK,CAACC,QAAQ,CAAC,UAAU,CAACC,MAAM,CAAC7N,OAAO,+BAA+BgO,iBAAiB,MAAM,CAACF,QAAQ,MAAMrG,KAAK8B,sBAAuB,SAAQX,EAAEZ,UAAU,qBAAgB,IAAQnN,EAAAA,EAAAA,GAAE,EAACiN,EAAAA,EAAAA,IAAE,CAAC7M,KAAK,CAAC,OAAO,WAAW2N,EAAEZ,UAAU,gBAAW,IAAQnN,EAAAA,EAAAA,GAAE,EAACiN,EAAAA,EAAAA,IAAE,CAAC7M,KAAKgT,OAAOC,aAAY,EAAGP,KAAK,CAACE,OAAM,MAAOjF,EAAEZ,UAAU,gBAAW,IAAQnN,EAAAA,EAAAA,GAAE,EAACwR,EAAAA,EAAAA,GAAE,CAAC,UAAU,eAAe,WAAW,CAAC,YAAYzD,EAAEZ,UAAU,eAAe,OAAMnN,EAAAA,EAAAA,GAAE,EAACiN,EAAAA,EAAAA,IAAE,CAAC7M,KAAKgT,OAAOC,aAAY,EAAGP,KAAK,CAACE,OAAM,MAAOjF,EAAEZ,UAAU,gBAAW,IAAQnN,EAAAA,EAAAA,GAAE,EAACwR,EAAAA,EAAAA,GAAE,CAAC,UAAU,eAAe,WAAW,CAAC,YAAYzD,EAAEZ,UAAU,eAAe,OAAMnN,EAAAA,EAAAA,GAAE,EAACiN,EAAAA,EAAAA,IAAE,CAACC,UAAS,KAAMa,EAAEZ,UAAU,kBAAkB,OAAMnN,EAAAA,EAAAA,GAAE,EAACiN,EAAAA,EAAAA,IAAE,CAAChI,MAAM,qBAAqB7E,KAAK,CAAC,yBAAyB2N,EAAEZ,UAAU,4BAAuB,IAAQnN,EAAAA,EAAAA,GAAE,EAACiN,EAAAA,EAAAA,IAAE,CAACC,UAAS,KAAMa,EAAEZ,UAAU,aAAa,OAAMnN,EAAAA,EAAAA,GAAE,EAACiN,EAAAA,EAAAA,IAAE,CAACC,UAAS,KAAMa,EAAEZ,UAAU,eAAe,OAAMnN,EAAAA,EAAAA,GAAE,EAACiN,EAAAA,EAAAA,IAAE,CAACC,UAAS,KAAMa,EAAEZ,UAAU,gBAAgB,OAAMnN,EAAAA,EAAAA,GAAE,EAACiN,EAAAA,EAAAA,IAAE,CAAC7M,KAAK4O,EAAAA,KAAKjB,EAAEZ,UAAU,wBAAmB,IAAQnN,EAAAA,EAAAA,GAAE,EAACwR,EAAAA,EAAAA,GAAE,CAAC,UAAU,eAAe,mBAAmB,CAAC,YAAYzD,EAAEZ,UAAU,uBAAuB,OAAMnN,EAAAA,EAAAA,GAAE,EAACiN,EAAAA,EAAAA,IAAE,CAACC,UAAS,EAAG4F,KAAK,CAACC,QAAQ,CAAC,UAAU,CAACC,MAAM,CAACE,cAAa,SAAUnF,EAAEZ,UAAU,iBAAY,IAAQnN,EAAAA,EAAAA,GAAE,EAACwR,EAAAA,EAAAA,GAAE,UAAU,YAAY,CAAC,YAAYzD,EAAEZ,UAAU,gBAAgB,OAAMnN,EAAAA,EAAAA,GAAE,EAAC2E,EAAAA,EAAAA,GAAE,UAAU,cAAcoJ,EAAEZ,UAAU,iBAAiB,OAAMnN,EAAAA,EAAAA,GAAE,EAACiN,EAAAA,EAAAA,IAAE,CAACC,UAAS,KAAMa,EAAEZ,UAAU,YAAY,OAAMnN,EAAAA,EAAAA,GAAE,EAACiN,EAAAA,EAAAA,OAAKc,EAAEZ,UAAU,aAAQ,IAAQnN,EAAAA,EAAAA,GAAE,EAACiN,EAAAA,EAAAA,IAAE,CAACC,UAAS,EAAG4F,KAAK,CAACtD,MAAK,MAAOzB,EAAEZ,UAAU,YAAO,GAAQY,GAAE/N,EAAAA,EAAAA,GAAE,EAACoN,EAAAA,EAAAA,GAAE,8BAA8BW,GAAG,MAAMuF,EAAEvF,C,2CCAprU,MAAMoB,EAAE,EAAE,SAASf,EAAEe,EAAEf,GAAG,IAAIkB,EAAE,EAAE,IAAI,MAAMtP,KAAKoO,EAAE,CAAC,MAAMA,EAAEpO,EAAEkR,aAAa/B,GAAG,iBAAiBf,GAAGmF,SAASnF,KAAKkB,EAAEsB,KAAKtL,IAAIgK,EAAElB,GAAI,QAAOkB,CAAE,C","sources":["components/Tools/Sketch/utils/sketch.ts","components/Tools/Sketch/ColorButton.tsx","components/Tools/Sketch/SizeSlider.tsx","components/Tools/Sketch/LineSymbols.tsx","components/Tools/Sketch/PolygonSymbols.tsx","components/Tools/Sketch/TextSymbols.tsx","components/Tools/Sketch/IconPicker.tsx","components/Tools/Sketch/IconSelectionPanel.tsx","components/Tools/Sketch/PointSymbols.tsx","components/Tools/Sketch/Sketch.tsx","../node_modules/@arcgis/core/layers/MapNotesLayer.js","../node_modules/@arcgis/core/layers/graphics/objectIdUtils.js"],"sourcesContent":["import MapView from \"@arcgis/core/views/MapView\";\nimport SketchViewModel from \"@arcgis/core/widgets/Sketch/SketchViewModel\";\nimport MapNotesLayer from \"@arcgis/core/layers/MapNotesLayer\";\nimport GraphicsLayer from \"@arcgis/core/layers/GraphicsLayer\";\nimport Color from \"@arcgis/core/Color\";\nimport SimpleFillSymbol from \"@arcgis/core/symbols/SimpleFillSymbol\";\nimport SimpleLineSymbol from \"@arcgis/core/symbols/SimpleLineSymbol\";\nimport TextSymbol from \"@arcgis/core/symbols/TextSymbol\";\nimport WebStyleSymbol from \"@arcgis/core/symbols/WebStyleSymbol\";\nimport request from \"@arcgis/core/request\";\nimport CIMSymbol from \"@arcgis/core/symbols/CIMSymbol\";\nimport * as cimSymbolUtils from \"@arcgis/core/symbols/support/cimSymbolUtils\";\nimport * as symbolUtils from \"@arcgis/core/symbols/support/symbolUtils\";\nimport Graphic from \"@arcgis/core/Graphic\";\nlet pointLayer: GraphicsLayer;\nlet polylineLayer: GraphicsLayer;\nlet polygonLayer: GraphicsLayer;\nlet textLayer: GraphicsLayer;\nlet sketchLayer: MapNotesLayer;\nlet selectedTool: string = \"\";\nlet fillSymbol = new SimpleFillSymbol({\n  color: [255, 0, 0, 0.5],\n  style: \"solid\",\n  outline: {\n    width: 2,\n    color: [255, 0, 0, 1],\n  },\n});\nlet lineSymbol = new SimpleLineSymbol({\n  width: 1,\n  color: [255, 0, 0, 1],\n  style: \"solid\",\n  cap: \"round\",\n  join: \"round\",\n});\nlet textSymbol = new TextSymbol({\n  color: [255, 0, 0, 1],\n  haloColor: [255, 255, 255, 1],\n  haloSize: \"1px\",\n  text: \"\",\n  xoffset: 3,\n  yoffset: 3,\n  font: {\n    // autocasts as new Font()\n    size: 10,\n    family: \"Aerial\",\n    weight: \"bold\",\n  },\n});\nlet pointSymbol: CIMSymbol;\nlet pointSketchViewModel: SketchViewModel;\nlet polylineSketchViewModel: SketchViewModel;\n\nlet polygonSketchViewModel: SketchViewModel;\n\nlet textSketchViewModel: SketchViewModel;\nlet sketchLayerView: __esri.GraphicsLayerView;\nlet highlights: any;\nlet highlightedGraphic: Graphic;\nexport function initializeSketchViewModel(\n  view: MapView,\n  setActiveSketchTool: Function,\n  selectedGraphics: Graphic[],\n  setSelectedGraphics: Function\n) {\n  sketchLayer = new MapNotesLayer({\n    listMode: \"hide\",\n    id: \"notes-layer\",\n  });\n  view.map.add(sketchLayer);\n  view\n    .whenLayerView(sketchLayer)\n    .then(\n      (layerView) => (sketchLayerView = layerView as __esri.GraphicsLayerView)\n    );\n  pointLayer = sketchLayer.pointLayer;\n  polylineLayer = sketchLayer.polylineLayer;\n  polygonLayer = sketchLayer.polygonLayer;\n\n  textLayer = sketchLayer.textLayer;\n  // create a new sketch view model for each different map note type\n  // this allows both the creation and modification of each different map note\n  pointSketchViewModel = createSketchViewModels(pointLayer, view, false);\n  polylineSketchViewModel = createSketchViewModels(polylineLayer, view, false);\n  polygonSketchViewModel = createSketchViewModels(polygonLayer, view, false);\n  polygonSketchViewModel.activeFillSymbol = fillSymbol;\n  (polylineSketchViewModel as any).activeLineSymbol = lineSymbol as any;\n\n  textSketchViewModel = createSketchViewModels(textLayer, view, true);\n\n  const viewModels = [\n    pointSketchViewModel,\n    polylineSketchViewModel,\n    polygonSketchViewModel,\n    textSketchViewModel,\n  ];\n  viewModels.forEach((viewModel) => {\n    viewModel?.on(\"create\", (e) => {\n      if (e.state === \"cancel\" && viewModel.activeTool !== null) {\n        setActiveSketchTool(\"select\");\n        if (highlights) {\n          highlights.remove();\n        }\n      }\n    });\n    viewModel?.on(\"update\", (e) => {\n      if (e.state === \"start\" || e.state === \"active\") {\n        setSelectedGraphics([...e.graphics]);\n      }\n    });\n  });\n}\n\nfunction createSketchViewModels(\n  layer: GraphicsLayer,\n  view: MapView,\n  isText: boolean\n) {\n  const sketchVM = new SketchViewModel({\n    view,\n    layer,\n    updateOnGraphicClick: true,\n  });\n  sketchVM.on(\"create\", addGraphic);\n  if (!isText) {\n    // sketchVM.on(\"update\", updateMapNotes);\n  }\n  return sketchVM;\n}\n\nfunction addGraphic(e: any) {\n  if (e.state === \"complete\") {\n    if (e.graphic.geometry.type === \"polygon\") {\n      e.graphic.symbol = fillSymbol;\n      sketchLayer.polygonLayer.add(e.graphic);\n      //   setTimeout(() => polygonSketchViewModel.updateGraphics.add(e.graphic));\n\n      polygonSketchViewModel.create(e.tool);\n      // polygonSketchViewModel.update(e.graphic, {});\n    }\n    if (e.graphic.geometry.type === \"polyline\") {\n      e.graphic.symbol = lineSymbol;\n      sketchLayer.polylineLayer.add(e.graphic);\n      polylineSketchViewModel.create(e.tool);\n    }\n    if (selectedTool === \"text\") {\n      e.graphic.symbol = textSymbol;\n      sketchLayer.textLayer.add(e.graphic);\n      textSketchViewModel.create(\"point\");\n    }\n    if (selectedTool === \"point\") {\n      e.graphic.symbol = pointSymbol;\n      sketchLayer.pointLayer.add(e.graphic);\n      pointSketchViewModel.create(\"point\");\n    }\n    if (highlights) {\n      highlights.remove();\n    }\n    highlights = sketchLayerView.highlight(e.graphic);\n    highlightedGraphic = e.graphic;\n  }\n}\n\nexport function toolSelected(\n  tool: string,\n  activeSketchTool: string,\n  setActiveSketchTool: Function\n) {\n  selectedTool = tool;\n  tool === activeSketchTool ? setActiveSketchTool(\"\") : setActiveSketchTool(tool);\n  if (activeSketchTool === \"\") {\n    cancelSketch();\n  }\n  if ([\"polygon\", \"rectangle\", \"circle\"].includes(tool)) {\n    polygonSketchViewModel.create(tool as any);\n  }\n  if ([\"polyline\"].includes(tool)) {\n    polylineSketchViewModel.create(tool as any);\n  }\n  if (tool === \"text\") {\n    polylineSketchViewModel.create(\"point\");\n  }\n  if (tool === \"point\") {\n    polylineSketchViewModel.create(\"point\");\n  }\n}\nlet updatingPolygonSymbol = false;\nexport function polygonSymbolUpdated(\n  fillColor: Color,\n  outlineColor: Color,\n  width: number\n) {\n  const preview = document.getElementById(\"polygon-preview\");\n  if (preview && !updatingPolygonSymbol) {\n    fillSymbol.color = fillColor;\n    fillSymbol.outline.color = outlineColor;\n    fillSymbol.outline.width = width;\n    if (polygonSketchViewModel) {\n      polygonSketchViewModel.activeFillSymbol = fillSymbol;\n      if (sketchLayer.polygonLayer) {\n        updateHighlightedGraphicSymbol(sketchLayer.polygonLayer, fillSymbol);\n      }\n    }\n    updatingPolygonSymbol = true;\n    preview.innerHTML = \"\";\n    symbolUtils\n      .renderPreviewHTML(fillSymbol, {\n        node: preview as HTMLElement,\n        size: 24,\n      })\n      .then(() => (updatingPolygonSymbol = false));\n  }\n}\n\nfunction updateHighlightedGraphicSymbol(\n  layer: GraphicsLayer,\n  symbol: __esri.Symbol\n) {\n  if (highlightedGraphic) {\n    layer.remove(highlightedGraphic);\n    highlightedGraphic.symbol = symbol;\n    highlightedGraphic = highlightedGraphic.clone();\n    layer.add(highlightedGraphic);\n    highlights = sketchLayerView.highlight(highlightedGraphic);\n  }\n}\n\nexport function pointSymbolUpdated(symbol: any, color: Color, size: number) {\n  request(`${symbol.url}${symbol.cimRef.replace(\".\", \"\")}`).then((ref) => {\n    //new CIMSymbol({data: `${url}/${id}/${symbol.cimRef}`})\n    pointSymbol = new CIMSymbol({\n      data: {\n        type: \"CIMSymbolReference\",\n        symbol: ref?.data,\n      },\n    });\n    cimSymbolUtils.applyCIMSymbolColor(pointSymbol, color);\n    cimSymbolUtils.scaleCIMSymbolTo(pointSymbol, size);\n    if (sketchLayer.pointLayer) {\n      updateHighlightedGraphicSymbol(sketchLayer.pointLayer, pointSymbol);\n    }\n    pointSketchViewModel.pointSymbol = pointSymbol;\n    const preview = document.getElementById(\"icon-preview\");\n    if (preview) {\n      preview.innerHTML = \"\";\n      symbolUtils.renderPreviewHTML(pointSymbol, {\n        node: preview as HTMLElement,\n        size: size,\n      });\n    }\n  });\n}\n\nexport function polylineSymbolUpdated(lineColor: Color, width: number) {\n  lineSymbol.color = lineColor;\n  lineSymbol.width = width;\n  if (polylineSketchViewModel) {\n    polylineSketchViewModel.polylineSymbol = lineSymbol as any;\n\n    polylineSketchViewModel.updateGraphics.forEach((graphic) => {\n      graphic.symbol = lineSymbol;\n    });\n    if (sketchLayer.polylineLayer) {\n      updateHighlightedGraphicSymbol(sketchLayer.polylineLayer, lineSymbol);\n    }\n  }\n\n  const preview = document.getElementById(\"line-preview\");\n  if (preview) {\n    preview.innerHTML = \"\";\n    symbolUtils.renderPreviewHTML(lineSymbol, {\n      node: preview as HTMLElement,\n      size: width,\n    });\n  }\n}\n\nexport function textSymbolUpdated(\n  fontSize: number,\n  fontColor: Color,\n  haloSize: number,\n  haloColor: Color,\n  showHalo: boolean,\n  textContent: string\n) {\n  textSymbol.color = fontColor;\n  textSymbol.font.size = fontSize;\n  textSymbol.haloColor = haloColor;\n  textSymbol.haloSize = showHalo ? haloSize : 0;\n  textSymbol.text = textContent;\n  textSketchViewModel.pointSymbol = textSymbol as any;\n  if (sketchLayer.textLayer) {\n    updateHighlightedGraphicSymbol(sketchLayer.textLayer, textSymbol);\n  }\n}\n\nexport function cancelSketch() {\n  pointSketchViewModel.cancel();\n  polylineSketchViewModel.cancel();\n  polygonSketchViewModel.cancel();\n  textSketchViewModel.cancel();\n}\n\nexport function clearSketch(setActiveSketchTool: Function) {\n  sketchLayer.polygonLayer.graphics.removeAll();\n  sketchLayer.pointLayer.graphics.removeAll();\n  sketchLayer.polylineLayer.graphics.removeAll();\n  sketchLayer.textLayer.graphics.removeAll();\n}\n\nexport function getSymbols(ids: string[], url: string) {\n  return new Promise((resolve, reject) => {\n    const promises: Promise<any>[] = [];\n\n    ids.forEach((id) => {\n      const symbol: WebStyleSymbol = new WebStyleSymbol({\n        styleUrl: `${url}/${id}/data`,\n        name: \"Pins\",\n      });\n      promises.push(request(symbol.styleUrl));\n    });\n    if (promises.length) {\n    }\n    const items: any[] = [];\n\n    Promise.all(promises).then((results: any) => {\n      results.forEach((result: any) => {\n        result.data.items.forEach((item: any) => {\n          item.url = result.url.replace(\"data\", \"\");\n          items.push(item);\n        });\n      });\n      // items.concat(result.data.items);\n\n      resolve(items);\n    });\n  });\n}\n\nexport function stopSketching() {\n  pointSketchViewModel.cancel();\n  polygonSketchViewModel.cancel();\n  polylineSketchViewModel.cancel();\n  textSketchViewModel.cancel();\n}\n\nexport function deleteSelectedGraphics(\n  selectedGraphics: Graphic[],\n  setSelectedGraphics: Function\n) {\n  pointLayer.removeMany(selectedGraphics);\n  polygonLayer.removeMany(selectedGraphics);\n  polylineLayer.removeMany(selectedGraphics);\n  textLayer.removeMany(selectedGraphics);\n  requestAnimationFrame(() => {\n    setSelectedGraphics((current: Graphic[]) => {\n      return [];\n    });\n  });\n}\n","import \"./Sketch.css\";\nimport Color from \"@arcgis/core/Color\";\nimport {\n  CalciteAction,\n  CalciteButton,\n  CalciteColorPicker,\n  CalciteColorPickerSwatch,\n  CalciteInput,\n  CalciteLabel,\n  CalcitePanel,\n  CalcitePopover,\n  CalciteSlider,\n} from \"@esri/calcite-components-react\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nfunction ColorButton(args: any) {\n  const popover = useRef<HTMLCalcitePopoverElement>(null);\n  const picker = useRef<HTMLCalciteColorPickerElement>(null);\n  const [color, setColor] = useState<Color>();\n  const [transparency, setTransparency] = useState<any>(0);\n  useEffect(() => {\n    if (!color && args.color) {\n      setColor(new Color(args.color));\n      setTransparency((1 - args.color[3]) * 100);\n    }\n  }, [args.color]);\n\n  return (\n    <div id={args.id}>\n      <CalciteLabel>\n        {args.label} Color\n        <CalciteButton\n          id={`${args.id}-popover-button`}\n          width=\"half\"\n          iconEnd=\"pencil\"\n          color=\"neutral\"\n          appearance=\"outline\"\n        >\n          <CalciteColorPickerSwatch\n            color={color?.toHex()}\n          ></CalciteColorPickerSwatch>\n        </CalciteButton>\n      </CalciteLabel>\n      <CalcitePopover\n        ref={popover}\n        overlayPositioning=\"fixed\"\n        placement=\"top-leading\"\n        label={\"\"}\n        referenceElement={`${args.id}-popover-button`}\n      >\n        <CalcitePanel heading=\"Color\">\n          <CalciteAction\n            icon=\"x\"\n            text=\"\"\n            slot=\"header-actions-end\"\n            onClick={() => {\n              popover.current?.toggle();\n              const c = new Color(color);\n              c.a = 1 - transparency / 100;\n              args.colorSet(c);\n            }}\n          ></CalciteAction>\n          <CalciteColorPicker\n            ref={picker}\n            hideSaved\n            hideHex\n            hideChannels\n            value={color ? color.toHex() : \"#FF0000\"}\n            onCalciteColorPickerInput={(e) =>\n              setColor(new Color(e.target.value))\n            }\n          ></CalciteColorPicker>\n        </CalcitePanel>\n        {/* <CalciteButton\n          width=\"full\"\n          onClick={() => {\n            popover.current?.toggle();\n            const c = new Color(color);\n            c.a = 1 - transparency / 100;\n            args.colorSet(c);\n          }}\n        >\n          Done\n        </CalciteButton> */}\n      </CalcitePopover>\n      {!args.hideTransparency && (\n        <CalciteLabel>\n          {args.label} Transparency\n          <div className=\"slider-input\">\n            <CalciteSlider\n              max={100}\n              min={0}\n              value={transparency}\n              onCalciteSliderInput={(e) => {\n                let value: number = e.target.value as number;\n                if (value > 100) {\n                  value = 100;\n                }\n                if (value < 0) {\n                  value = 0;\n                }\n                setTransparency(value);\n                const c = new Color(color);\n                c.a = 1 - transparency / 100;\n                args.colorSet(c);\n              }}\n            ></CalciteSlider>\n            <CalciteInput\n              max={100}\n              min={0}\n              type=\"number\"\n              numberButtonType=\"none\"\n              suffixText=\"%\"\n              value={transparency}\n              onCalciteInputInput={(e) => {\n                let value: number = parseInt(e.target.value);\n                if (value > 100) {\n                  value = 100;\n                }\n                if (value < 0) {\n                  value = 0;\n                }\n\n                setTransparency(value);\n                const c = new Color(color);\n                c.a = 1 - transparency / 100;\n                args.colorSet(c);\n              }}\n            ></CalciteInput>\n          </div>\n        </CalciteLabel>\n      )}\n    </div>\n  );\n}\n\nexport default React.memo(ColorButton);\n","import {\n  CalciteInput,\n  CalciteLabel,\n  CalciteSlider,\n} from \"@esri/calcite-components-react\";\nimport { useEffect, useState } from \"react\";\nimport React from \"react\";\n\nfunction SizeSlider(args: any) {\n  const [value, setValue] = useState<any>();\n  useEffect(() => {\n    setValue(args.value);\n  }, [args.value]);\n  return (\n    <CalciteLabel>\n      {args.label}\n      <div className=\"slider-input\">\n        <CalciteSlider\n          max={args.max}\n          min={args.min}\n          value={value}\n          onCalciteSliderInput={(e) => {\n            setValue(e.target.value);\n            args.sizeSet(e.target.value);\n          }}\n        ></CalciteSlider>\n        <CalciteInput\n          type=\"number\"\n          numberButtonType=\"none\"\n          min={args.min}\n          max={args.max}\n          value={value}\n          suffixText=\"px\"\n          onCalciteInputInput={(e) => {\n            setValue(parseFloat(e.target.value));\n            args.sizeSet(parseFloat(e.target.value));\n          }}\n        ></CalciteInput>\n      </div>\n    </CalciteLabel>\n  );\n}\nexport default React.memo(SizeSlider);\n","import \"./Sketch.css\";\n\nimport React, { useEffect, useState } from \"react\";\nimport ColorButton from \"./ColorButton\";\nimport SizeSlider from \"./SizeSlider\";\nimport Color from \"@arcgis/core/Color\";\n\nfunction LineSymbols(args: any) {\n  const [lineColor, setLineColor] = useState<Color>(new Color([255, 0, 0, 1]));\n  const [width, setWidth] = useState(2);\n  useEffect(() => {\n    if (lineColor && width) {\n      args.polylineSymbolUpdated(lineColor, width);\n    }\n  }, [lineColor, width]);\n  return (\n    <div id=\"line-symbols\">\n      <div id=\"line-preview\" className=\"preview\"></div>\n\n      <ColorButton\n        id=\"line\"\n        label=\"Line\"\n        color={lineColor.toRgba()}\n        colorSet={(c: any) => {\n          setLineColor(c);\n          args.polylineSymbolUpdated(c, width);\n        }}\n      ></ColorButton>\n      <SizeSlider\n        value={width}\n        min={0.1}\n        max={18}\n        label=\"Width\"\n        sizeSet={(size: number) => {\n          setWidth(size);\n          args.polylineSymbolUpdated(lineColor, width);\n        }}\n      ></SizeSlider>\n    </div>\n  );\n}\n\nexport default React.memo(LineSymbols);\n","import Color from \"@arcgis/core/Color\";\nimport React, { useEffect, useState } from \"react\";\nimport ColorButton from \"./ColorButton\";\nimport SizeSlider from \"./SizeSlider\";\n\nfunction PolygonSymbols(args: any) {\n  const [fillColor, setFillColor] = useState<Color>(\n    new Color([255, 0, 0, 0.5])\n  );\n  const [outlineColor, setOutlineColor] = useState<Color>(\n    new Color([255, 0, 0, 1])\n  );\n  const [width, setWidth] = useState(2);\n  useEffect(() => {\n    if (fillColor && outlineColor && width) {\n      args.polygonSymbolUpdated(fillColor, outlineColor, width);\n    }\n  }, [fillColor, outlineColor, width]);\n  return (\n    <div id=\"polygon-symbols\">\n      <div id=\"polygon-preview\" className=\"preview\"></div>\n      <ColorButton\n        id=\"polygon-fill\"\n        color={fillColor.toRgba()}\n        label=\"Fill\"\n        colorSet={(c: any) => {\n          setFillColor(c);\n          args.polygonSymbolUpdated(c, outlineColor, width);\n        }}\n      ></ColorButton>\n      <ColorButton\n        id=\"polygon-outline\"\n        color={outlineColor.toRgba()}\n        label=\"Outline\"\n        colorSet={(c: any) => {\n          setOutlineColor(c);\n          args.polygonSymbolUpdated(fillColor, c, width);\n        }}\n      ></ColorButton>\n      <SizeSlider\n        label=\"Outline Width\"\n        min={0.1}\n        max={18}\n        value={width}\n        sizeSet={(size: any) => {\n          setWidth(size);\n          args.polygonSymbolUpdated(fillColor, outlineColor, width);\n        }}\n      ></SizeSlider>\n    </div>\n  );\n}\n\nexport default React.memo(PolygonSymbols);\n","import Color from \"@arcgis/core/Color\";\nimport {\n  CalciteInput,\n  CalciteLabel,\n  CalciteSwitch,\n} from \"@esri/calcite-components-react\";\nimport React, { useState } from \"react\";\nimport ColorButton from \"./ColorButton\";\n\nfunction TextSymbols(args: any) {\n  const [fontColor, setFontColor] = useState<Color>(new Color([255, 0, 0, 1]));\n  const [fontSize, setFontSize] = useState(10);\n  const [showHalo, setShowHalo] = useState(false);\n  const [haloSize, setHaloSize] = useState(1);\n  const [haloColor, setHaloColor] = useState<Color>(\n    new Color([255, 255, 255, 1])\n  );\n  const [textContent, setTextContent] = useState(\"\");\n\n  return (\n    <div id=\"text-symbols\">\n      <CalciteLabel>\n        Text\n        <CalciteInput\n          type=\"textarea\"\n          scale=\"m\"\n          value={textContent}\n          onCalciteInputInput={(e) => {\n            setTextContent(e.target.value);\n          }}\n          onCalciteInputChange={(e) => {\n            requestAnimationFrame(() => {\n              args.textSymbolUpdated(\n                fontSize,\n                fontColor,\n                haloSize,\n                haloColor,\n                showHalo,\n                textContent\n              );\n            });\n          }}\n        ></CalciteInput>\n      </CalciteLabel>\n      <ColorButton\n        id=\"font\"\n        label=\"Font\"\n        color={fontColor.toRgba()}\n        hideTransparency\n        colorSet={(c: any) => {\n          setFontColor(c);\n          args.textSymbolUpdated(\n            fontSize,\n            c,\n            haloSize,\n            haloColor,\n            showHalo,\n            textContent\n          );\n        }}\n      ></ColorButton>\n      <CalciteLabel>\n        Font Size\n        <CalciteInput\n          type=\"number\"\n          min={5}\n          max={125}\n          value={fontSize.toString()}\n          onCalciteInputInput={(e) => {\n            setFontSize(parseFloat(e.target.value));\n            args.textSymbolUpdated(\n              fontSize,\n              fontColor,\n              haloSize,\n              haloColor,\n              showHalo,\n              textContent\n            );\n          }}\n        ></CalciteInput>\n      </CalciteLabel>\n      <CalciteLabel layout=\"inline\">\n        Halo\n        <CalciteSwitch\n          checked={showHalo ? true : undefined}\n          onCalciteSwitchChange={(e) => {\n            setShowHalo(e.target.checked);\n            args.textSymbolUpdated(\n              fontSize,\n              fontColor,\n              haloSize,\n              haloColor,\n              showHalo,\n              textContent\n            );\n          }}\n        ></CalciteSwitch>\n      </CalciteLabel>\n      <div id=\"halo\" hidden={showHalo ? undefined : true}>\n        <ColorButton\n          id=\"halo\"\n          label=\"\"\n          color={haloColor.toRgba()}\n          hideTransparency\n          colorSet={(c: any) => {\n            setHaloColor(c);\n            args.textSymbolUpdated(\n              fontSize,\n              fontColor,\n              haloSize,\n              c,\n              showHalo,\n              textContent\n            );\n          }}\n        ></ColorButton>\n        <CalciteLabel>\n          Size\n          <CalciteInput\n            type=\"number\"\n            min={1}\n            max={10}\n            value={haloSize.toString()}\n            onCalciteInputInput={(e) => {\n              setHaloSize(parseFloat(e.target.value));\n              args.textSymbolUpdated(\n                fontSize,\n                fontColor,\n                haloSize,\n                haloColor,\n                showHalo,\n                textContent\n              );\n            }}\n          ></CalciteInput>\n        </CalciteLabel>\n      </div>\n    </div>\n  );\n}\nexport default React.memo(TextSymbols);\n","import { CalciteIcon, CalciteLabel } from \"@esri/calcite-components-react\";\nimport React from \"react\";\nimport \"./Sketch.css\";\n\nfunction IconPicker(args: any) {\n  return (\n    <div id=\"icon-picker\">\n      <div id=\"icon-preview\" className=\"preview\"></div>\n      <CalciteLabel alignment=\"start\" scale=\"m\" layout=\"default\">\n        <button\n          className=\"change-symbol-trigger\"\n          type=\"button\"\n          onClick={() => {\n            args.pickerClicked();\n          }}\n        >\n          <div className=\"container\">\n            {args.symbol && (\n              <div className=\"icon-symbol\">\n                <img\n                  src={`${args.symbol.url}${args.symbol.thumbnail.href.replace(\n                    \".\",\n                    \"\"\n                  )}`}\n                  alt={args.symbol.title}\n                  width={50}\n                  height={50}\n                />\n              </div>\n            )}\n\n            <div className=\"icon-label\">{args.symbol.title}</div>\n            <CalciteIcon icon=\"chevron-right\"></CalciteIcon>\n          </div>\n        </button>\n      </CalciteLabel>\n    </div>\n  );\n}\n\nexport default React.memo(IconPicker);\n","import { CalcitePanel } from \"@esri/calcite-components-react\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Sketch.css\";\n\nfunction IconSelectionPanel(args: any) {\n  const [symbols, setSymbols] = useState<any[]>([]);\n  useEffect(() => {\n    if (symbols && args.symbols) {\n      setSymbols(args.symbols);\n    }\n  }, []);\n\n  return (\n    <div id=\"icon-selection\">\n      <CalcitePanel\n        showBackButton\n        heading=\"Change Symbol\"\n        onCalcitePanelBackClick={() => {\n          args.backClicked();\n        }}\n      >\n        <div className=\"palette\">\n          {symbols &&\n            symbols.map((symbol: any, i: number) => {\n              return (\n                <img\n                  onClick={() => {\n                    args.iconSelected(symbol);\n                    args.backClicked();\n                  }}\n                  className=\"item\"\n                  key={`icon-${i}`}\n                  alt={symbol.title}\n                  src={`${symbol.url}${symbol.thumbnail.href.replace(\".\", \"\")}`}\n                ></img>\n              );\n            })}\n        </div>\n      </CalcitePanel>\n    </div>\n  );\n}\n\nexport default React.memo(IconSelectionPanel);\n","import \"@esri/calcite-components/dist/components/calcite-flow\";\nimport \"@esri/calcite-components/dist/components/calcite-input\";\nimport \"@esri/calcite-components/dist/components/calcite-label\";\nimport \"@esri/calcite-components/dist/components/calcite-panel\";\n\n\nimport {\n  CalciteFlow,\n  CalciteInput,\n  CalciteLabel,\n  CalcitePanel,\n} from \"@esri/calcite-components-react\";\nimport React, { useEffect, useState } from \"react\";\nimport { getSymbols } from \"./utils/sketch\";\nimport IconPicker from \"./IconPicker\";\nimport IconSelectionPanel from \"./IconSelectionPanel\";\nimport ColorButton from \"./ColorButton\";\nimport Color from \"@arcgis/core/Color\";\n\nfunction PointSymbols(args: any) {\n  const [symbols, setSymbols] = useState<any[]>([]);\n  const [symbol, setSymbol] = useState<any>();\n  const [pointSize, setPointSize] = useState(16);\n\n  const url = \"https://www.arcgis.com/sharing/rest/content/items/\";\n  const ids = [\n    \"a63b3a4631ae41d4a1bc3ba6d9c85bfe\",\n    \"70ccf6bcbd304773a164be896e76edd3\",\n  ];\n\n  const [activeFlow, setActiveFlow] = useState(\"main\");\n  const [pointColor, setPointColor] = useState<Color>(\n    new Color([255, 0, 0, 1])\n  );\n\n  useEffect(() => {\n    getSymbols(ids, url).then((items: any) => {\n      setSymbols(items as any[]);\n      if (items.length) {\n        setSymbol(items[0]);\n        args.pointSymbolUpdated(items[0], pointColor, pointSize);\n      }\n    });\n  }, []);\n  return (\n    <div id=\"point-symbols\">\n      {symbols.length && (\n        <div>\n          {activeFlow === \"main\" && (\n            <CalcitePanel>\n              <IconPicker\n                pickerClicked={() => setActiveFlow(\"icon\")}\n                symbol={symbol}\n              ></IconPicker>\n              <ColorButton\n                id=\"point\"\n                label=\"Point\"\n                color={pointColor.toRgba()}\n                colorSet={(c: any) => {\n                  setPointColor(c);\n                  args.pointSymbolUpdated(symbol, c, pointSize);\n                }}\n              ></ColorButton>\n              <CalciteLabel>\n                Size\n                <CalciteInput\n                  type=\"number\"\n                  min={6}\n                  max={72}\n                  value={pointSize.toString()}\n                  onCalciteInputChange={(e: any) => {\n                    setPointSize(parseFloat(e.target.value));\n                    args.pointSymbolUpdated(\n                      symbol,\n                      pointColor,\n                      parseFloat(e.target.value)\n                    );\n                  }}\n                ></CalciteInput>\n              </CalciteLabel>\n            </CalcitePanel>\n          )}\n          {activeFlow === \"icon\" && (\n            <IconSelectionPanel\n              iconSelected={(icon: any) => {\n                setSymbol(icon);\n                args.pointSymbolUpdated(icon, pointColor, pointSize);\n              }}\n              backClicked={() => setActiveFlow(\"main\")}\n              symbols={symbols}\n            ></IconSelectionPanel>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default React.memo(PointSymbols);\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\n\nimport {\n  CalciteAction,\n  CalciteActionGroup,\n  CalciteButton,\n  CalcitePanel,\n} from \"@esri/calcite-components-react\";\nimport \"./Sketch.css\";\nimport {\n  cancelSketch,\n  clearSketch,\n  deleteSelectedGraphics,\n  initializeSketchViewModel,\n  pointSymbolUpdated,\n  polygonSymbolUpdated,\n  polylineSymbolUpdated,\n  stopSketching,\n  textSymbolUpdated,\n  toolSelected,\n} from \"./utils/sketch\";\nimport LineSymbols from \"./LineSymbols\";\nimport PolygonSymbols from \"./PolygonSymbols\";\nimport TextSymbols from \"./TextSymbols\";\nimport PointSymbols from \"./PointSymbols\";\nimport { collapsePanel } from \"../../Shell/utils/shell\";\nfunction Sketch(args: any) {\n  const loaded = useRef(false);\n  const [activeSketchTool, setActiveSketchTool] = useState(\"\");\n  const [isActive, setIsActive] = useState(false);\n\n  const [selectedGraphics, setSelectedGraphics] = useState<__esri.Graphic[]>(\n    []\n  );\n\n  useEffect(() => {\n    if (!loaded.current) {\n      initializeSketchViewModel(\n        args.view,\n        setActiveSketchTool,\n        selectedGraphics,\n        setSelectedGraphics\n      );\n    }\n  }, []);\n  useEffect(() => {\n    setIsActive(args.isActive);\n  }, [args.isActive]);\n  const toolDismissed = useCallback((e: any) => {\n    args.toolDismissed();\n    cancelSketch();\n    setActiveSketchTool(\"\");\n  }, []);\n  return (\n    <CalcitePanel\n      id=\"sketch-panel\"\n      heading=\"Sketch\"\n      data-panel=\"sketch\"\n      hidden={!isActive}\n      closed={!isActive ? true : undefined}\n      dismissed={!isActive ? true : undefined}\n      dismissible\n      onCalcitePanelDismiss={toolDismissed}\n    >\n      <CalciteAction\n        icon=\"chevron-up\"\n        text=\"\"\n        slot=\"header-actions-end\"\n        onClick={collapsePanel}\n      ></CalciteAction>\n      <div id=\"sketch-tools\">\n        <div className=\"sticky\">\n          <CalciteActionGroup layout=\"horizontal\">\n            <CalciteAction\n              active={activeSketchTool === \"point\" ? true : undefined}\n              icon=\"pin\"\n              text={\"\"}\n              onClick={() => toolSelected(\"point\", activeSketchTool, setActiveSketchTool)}\n            ></CalciteAction>\n            <CalciteAction\n              active={activeSketchTool === \"polyline\" ? true : undefined}\n              icon=\"line\"\n              text={\"\"}\n              onClick={() =>\n                toolSelected(\"polyline\", activeSketchTool, setActiveSketchTool)\n              }\n            ></CalciteAction>\n            <CalciteAction\n              active={activeSketchTool === \"polygon\" ? true : undefined}\n              icon=\"polygon\"\n              text={\"\"}\n              onClick={() => toolSelected(\"polygon\", activeSketchTool, setActiveSketchTool)}\n            ></CalciteAction>\n            <CalciteAction\n              active={activeSketchTool === \"rectangle\" ? true : undefined}\n              icon=\"rectangle\"\n              text={\"\"}\n              onClick={() =>\n                toolSelected(\"rectangle\", activeSketchTool, setActiveSketchTool)\n              }\n            ></CalciteAction>\n            <CalciteAction\n              active={activeSketchTool === \"circle\" ? true : undefined}\n              icon=\"circle\"\n              text={\"\"}\n              onClick={() => toolSelected(\"circle\", activeSketchTool, setActiveSketchTool)}\n            ></CalciteAction>\n            <CalciteAction\n              active={activeSketchTool === \"text\" ? true : undefined}\n              icon=\"text\"\n              text={\"\"}\n              onClick={() => toolSelected(\"text\", activeSketchTool, setActiveSketchTool)}\n            ></CalciteAction>\n          </CalciteActionGroup>\n          <CalciteActionGroup layout=\"horizontal\">\n            <CalciteAction\n              icon=\"cursor\"\n              text={\"\"}\n              active={activeSketchTool === \"select\" ? true : undefined}\n              onClick={() => {\n                stopSketching();\n                toolSelected(\"select\", activeSketchTool, setActiveSketchTool);\n              }}\n            ></CalciteAction>\n            <CalciteAction\n              icon=\"trash\"\n              text={\"\"}\n              onClick={() => clearSketch(setActiveSketchTool)}\n            ></CalciteAction>\n          </CalciteActionGroup>\n        </div>\n        <div\n          id=\"point-symbols\"\n          className=\"symbol\"\n          hidden={activeSketchTool !== \"point\" ? true : undefined}\n        >\n          <PointSymbols pointSymbolUpdated={pointSymbolUpdated}></PointSymbols>\n        </div>\n        <div\n          id=\"line-symbols\"\n          className=\"symbol\"\n          hidden={activeSketchTool !== \"polyline\" ? true : undefined}\n        >\n          <LineSymbols\n            polylineSymbolUpdated={polylineSymbolUpdated}\n          ></LineSymbols>\n        </div>\n        <div\n          id=\"polygon-symbols\"\n          className=\"symbol\"\n          hidden={\n            ![\"polygon\", \"rectangle\", \"circle\"].includes(activeSketchTool)\n              ? true\n              : undefined\n          }\n        >\n          <PolygonSymbols\n            polygonSymbolUpdated={polygonSymbolUpdated}\n          ></PolygonSymbols>\n        </div>\n        <div\n          id=\"text-symbols\"\n          className=\"symbol\"\n          hidden={activeSketchTool !== \"text\" ? true : undefined}\n        >\n          <TextSymbols textSymbolUpdated={textSymbolUpdated}></TextSymbols>\n        </div>\n        {selectedGraphics.length > 0 && (\n          <CalciteButton\n            onClick={() =>\n              deleteSelectedGraphics(selectedGraphics, setSelectedGraphics)\n            }\n            alignment=\"center\"\n            color=\"red\"\n            appearance=\"transparent\"\n            icon-end=\"trash\"\n          >\n            {selectedGraphics.length}{\" \"}\n            {selectedGraphics.length > 1 ? \"features\" : \"feature\"}\n          </CalciteButton>\n        )}\n      </div>\n    </CalcitePanel>\n  );\n}\n\nexport default React.memo(Sketch);\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../chunks/tslib.es6.js\";import\"../geometry.js\";import t from\"../Graphic.js\";import\"../symbols.js\";import r from\"../core/Collection.js\";import o from\"../core/Error.js\";import{clone as i}from\"../core/lang.js\";import{isNone as a,isSome as l}from\"../core/maybe.js\";import{MultiOriginJSONMixin as n}from\"../core/MultiOriginJSONSupport.js\";import{setDeepValue as s}from\"../core/object.js\";import p from\"../core/Warning.js\";import{property as y}from\"../core/accessorSupport/decorators/property.js\";import\"../core/accessorSupport/ensureType.js\";import{reader as m}from\"../core/accessorSupport/decorators/reader.js\";import{subclass as u}from\"../core/accessorSupport/decorators/subclass.js\";import{writer as c}from\"../core/accessorSupport/decorators/writer.js\";import{canProjectWithoutEngine as d,isLoaded as f,load as g,project as b}from\"../geometry/projection.js\";import{normalizeCentralMeridian as S}from\"../geometry/support/normalizeUtils.js\";import{equals as h}from\"../geometry/support/spatialReferenceUtils.js\";import O from\"./FeatureLayer.js\";import w from\"./GraphicsLayer.js\";import j from\"./Layer.js\";import{findLastObjectIdFromFeatures as N}from\"./graphics/objectIdUtils.js\";import{BlendLayer as L}from\"./mixins/BlendLayer.js\";import{OperationalLayer as x}from\"./mixins/OperationalLayer.js\";import{PortalLayer as J}from\"./mixins/PortalLayer.js\";import{ScaleRangeLayer as v}from\"./mixins/ScaleRangeLayer.js\";import T from\"./support/Field.js\";import C from\"../symbols/SimpleFillSymbol.js\";import M from\"../symbols/SimpleLineSymbol.js\";import I from\"../symbols/SimpleMarkerSymbol.js\";import R from\"../symbols/TextSymbol.js\";import D from\"../geometry/SpatialReference.js\";import E from\"../geometry/Extent.js\";function F(e){return e.layers.some((e=>null!=e.layerDefinition.visibilityField))}const G=new T({name:\"OBJECTID\",alias:\"OBJECTID\",type:\"oid\",nullable:!1,editable:!1}),_=new T({name:\"title\",alias:\"Title\",type:\"string\",nullable:!0,editable:!0});let P=class extends w{constructor(e){super(e),this.visibilityMode=\"inherited\"}initialize(){for(const e of this.graphics)e.sourceLayer=this.layer;this.graphics.on(\"after-add\",(e=>{e.item.sourceLayer=this.layer})),this.graphics.on(\"after-remove\",(e=>{e.item.sourceLayer=null}))}get sublayers(){return this.graphics}};e([y({readOnly:!0})],P.prototype,\"sublayers\",null),e([y()],P.prototype,\"layer\",void 0),e([y()],P.prototype,\"layerId\",void 0),e([y({readOnly:!0})],P.prototype,\"visibilityMode\",void 0),P=e([u(\"esri.layers.MapNotesLayer.MapNotesSublayer\")],P);const k=[{geometryType:\"polygon\",geometryTypeJSON:\"esriGeometryPolygon\",id:\"polygonLayer\",layerId:0,title:\"Polygons\",identifyingSymbol:(new C).toJSON()},{geometryType:\"polyline\",geometryTypeJSON:\"esriGeometryPolyline\",id:\"polylineLayer\",layerId:1,title:\"Polylines\",identifyingSymbol:(new M).toJSON()},{geometryType:\"multipoint\",geometryTypeJSON:\"esriGeometryMultipoint\",id:\"multipointLayer\",layerId:2,title:\"Multipoints\",identifyingSymbol:(new I).toJSON()},{geometryType:\"point\",geometryTypeJSON:\"esriGeometryPoint\",id:\"pointLayer\",layerId:3,title:\"Points\",identifyingSymbol:(new I).toJSON()},{geometryType:\"point\",geometryTypeJSON:\"esriGeometryPoint\",id:\"textLayer\",layerId:4,title:\"Text\",identifyingSymbol:(new R).toJSON()}];let z=class extends(L(v(x(J(n(j)))))){constructor(e){super(e),this.capabilities={operations:{supportsMapNotesEditing:!0}},this.featureCollections=null,this.featureCollectionJSON=null,this.featureCollectionType=\"notes\",this.legendEnabled=!1,this.minScale=0,this.maxScale=0,this.spatialReference=D.WGS84,this.sublayers=new r(k.map((e=>new P({id:e.id,layerId:e.layerId,title:e.title,layer:this})))),this.title=\"Map Notes\",this.type=\"map-notes\",this.visibilityMode=\"inherited\"}readCapabilities(e,t,r){return{operations:{supportsMapNotesEditing:!F(t)&&\"portal-item\"!==r?.origin}}}readFeatureCollections(e,t,o){if(!F(t))return null;const i=t.layers.map((e=>{const t=new O;return t.read(e,o),t}));return new r({items:i})}readLegacyfeatureCollectionJSON(e,t){return F(t)?i(t.featureCollection):null}readFullExtent(e,t){if(!t.layers.length||t.layers.every((e=>!e.layerDefinition.extent)))return new E({xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:D.WGS84});const r=D.fromJSON(t.layers[0].layerDefinition.spatialReference);return t.layers.reduce(((e,t)=>{const r=t.layerDefinition.extent;return r?E.fromJSON(r).union(e):e}),new E({spatialReference:r}))}readMinScale(e,t){for(const r of t.layers)if(null!=r.layerDefinition.minScale)return r.layerDefinition.minScale;return 0}readMaxScale(e,t){for(const r of t.layers)if(null!=r.layerDefinition.maxScale)return r.layerDefinition.maxScale;return 0}get multipointLayer(){return this._findSublayer(\"multipointLayer\")}get pointLayer(){return this._findSublayer(\"pointLayer\")}get polygonLayer(){return this._findSublayer(\"polygonLayer\")}get polylineLayer(){return this._findSublayer(\"polylineLayer\")}readSpatialReference(e,t){return t.layers.length?D.fromJSON(t.layers[0].layerDefinition.spatialReference):D.WGS84}readSublayers(e,o,i){if(F(o))return null;const a=[];let l=o.layers.reduce(((e,t)=>Math.max(e,t.layerDefinition.id??-1)),-1)+1;for(const{layerDefinition:r,featureSet:n}of o.layers){const e=r.geometryType??n.geometryType,o=r.id??l++,i=k.find((t=>e===t.geometryTypeJSON&&r.drawingInfo?.renderer?.symbol?.type===t.identifyingSymbol.type));if(i){const e=new P({id:i.id,title:r.name,layerId:o,layer:this,graphics:n.features.map((({geometry:e,symbol:r,attributes:o,popupInfo:i})=>t.fromJSON({attributes:o,geometry:e,symbol:r,popupTemplate:i})))});a.push(e)}}return new r(a)}writeSublayers(e,t,r,i){const{minScale:n,maxScale:p}=this;if(a(e))return;const y=e.some((e=>e.graphics.length>0));if(!this.capabilities.operations.supportsMapNotesEditing)return void(y&&i?.messages?.push(new o(\"map-notes-layer:editing-not-supported\",\"New map notes cannot be added to this layer\")));const m=[];let u=this.spatialReference.toJSON();e:for(const o of e)for(const e of o.graphics)if(l(e.geometry)){u=e.geometry.spatialReference.toJSON();break e}for(const o of k){const t=e.find((e=>o.id===e.id));this._writeMapNoteSublayer(m,t,o,n,p,u,i)}s(\"featureCollection.layers\",m,t)}get textLayer(){return this._findSublayer(\"textLayer\")}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:[\"Feature Collection\"]},e)),Promise.resolve(this)}read(e,t){\"featureCollection\"in e&&(e=i(e),Object.assign(e,e.featureCollection)),super.read(e,t)}async beforeSave(){if(a(this.sublayers))return;let e=null;const t=[];for(const o of this.sublayers)for(const r of o.graphics)if(l(r.geometry)){const o=r.geometry;e?h(o.spatialReference,e)||(d(o.spatialReference,e)||f()||await g(),r.geometry=b(o,e)):e=o.spatialReference,t.push(r)}const r=await S(t.map((e=>e.geometry)));t.forEach(((e,t)=>e.geometry=r[t]))}_findSublayer(e){return a(this.sublayers)?null:this.sublayers?.find((t=>t.id===e))??null}_writeMapNoteSublayer(e,t,r,o,l,n,s){const p=[];if(!a(t)){for(const e of t.graphics)this._writeMapNote(p,e,r.geometryType,s);this._normalizeObjectIds(p,G),e.push({layerDefinition:{name:t.title,drawingInfo:{renderer:{type:\"simple\",symbol:i(r.identifyingSymbol)}},id:t.layerId,geometryType:r.geometryTypeJSON,minScale:o,maxScale:l,objectIdField:\"OBJECTID\",fields:[G.toJSON(),_.toJSON()],spatialReference:n},featureSet:{features:p,geometryType:r.geometryTypeJSON}})}}_writeMapNote(e,t,r,o){if(a(t))return;const{geometry:i,symbol:n,popupTemplate:s}=t;if(a(i))return;if(i.type!==r)return void o?.messages?.push(new p(\"map-notes-layer:invalid-geometry-type\",`Geometry \"${i.type}\" cannot be saved in \"${r}\" layer`,{graphic:t}));if(a(n))return void o?.messages?.push(new p(\"map-notes-layer:no-symbol\",\"Skipping map notes with no symbol\",{graphic:t}));const y={attributes:{...t.attributes},geometry:i.toJSON(),symbol:n.toJSON()};l(s)&&(y.popupInfo=s.toJSON()),e.push(y)}_normalizeObjectIds(e,t){const r=t.name;let o=N(r,e)+1;const i=new Set;for(const a of e){a.attributes||(a.attributes={});const{attributes:e}=a;(null==e[r]||i.has(e[r]))&&(e[r]=o++),i.add(e[r])}}};e([y({readOnly:!0})],z.prototype,\"capabilities\",void 0),e([m([\"portal-item\",\"web-map\"],\"capabilities\",[\"layers\"])],z.prototype,\"readCapabilities\",null),e([y({readOnly:!0})],z.prototype,\"featureCollections\",void 0),e([m([\"web-map\",\"portal-item\"],\"featureCollections\",[\"layers\"])],z.prototype,\"readFeatureCollections\",null),e([y({readOnly:!0,json:{origins:{\"web-map\":{write:{enabled:!0,target:\"featureCollection\"}}}}})],z.prototype,\"featureCollectionJSON\",void 0),e([m([\"web-map\",\"portal-item\"],\"featureCollectionJSON\",[\"featureCollection\"])],z.prototype,\"readLegacyfeatureCollectionJSON\",null),e([y({readOnly:!0,json:{read:!1,write:{enabled:!0,ignoreOrigin:!0}}})],z.prototype,\"featureCollectionType\",void 0),e([y({json:{write:!1}})],z.prototype,\"fullExtent\",void 0),e([m([\"web-map\",\"portal-item\"],\"fullExtent\",[\"layers\"])],z.prototype,\"readFullExtent\",null),e([y({readOnly:!0,json:{origins:{\"web-map\":{write:{target:\"featureCollection.showLegend\",overridePolicy(){return{enabled:null!=this.featureCollectionJSON}}}}}}})],z.prototype,\"legendEnabled\",void 0),e([y({type:[\"show\",\"hide\"]})],z.prototype,\"listMode\",void 0),e([y({type:Number,nonNullable:!0,json:{write:!1}})],z.prototype,\"minScale\",void 0),e([m([\"web-map\",\"portal-item\"],\"minScale\",[\"layers\"])],z.prototype,\"readMinScale\",null),e([y({type:Number,nonNullable:!0,json:{write:!1}})],z.prototype,\"maxScale\",void 0),e([m([\"web-map\",\"portal-item\"],\"maxScale\",[\"layers\"])],z.prototype,\"readMaxScale\",null),e([y({readOnly:!0})],z.prototype,\"multipointLayer\",null),e([y({value:\"ArcGISFeatureLayer\",type:[\"ArcGISFeatureLayer\"]})],z.prototype,\"operationalLayerType\",void 0),e([y({readOnly:!0})],z.prototype,\"pointLayer\",null),e([y({readOnly:!0})],z.prototype,\"polygonLayer\",null),e([y({readOnly:!0})],z.prototype,\"polylineLayer\",null),e([y({type:D})],z.prototype,\"spatialReference\",void 0),e([m([\"web-map\",\"portal-item\"],\"spatialReference\",[\"layers\"])],z.prototype,\"readSpatialReference\",null),e([y({readOnly:!0,json:{origins:{\"web-map\":{write:{ignoreOrigin:!0}}}}})],z.prototype,\"sublayers\",void 0),e([m(\"web-map\",\"sublayers\",[\"layers\"])],z.prototype,\"readSublayers\",null),e([c(\"web-map\",\"sublayers\")],z.prototype,\"writeSublayers\",null),e([y({readOnly:!0})],z.prototype,\"textLayer\",null),e([y()],z.prototype,\"title\",void 0),e([y({readOnly:!0,json:{read:!1}})],z.prototype,\"type\",void 0),z=e([u(\"esri.layers.MapNotesLayer\")],z);const B=z;export{B as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nconst t=1;function n(t,n){let o=0;for(const e of n){const n=e.attributes?.[t];\"number\"==typeof n&&isFinite(n)&&(o=Math.max(o,n))}return o}export{n as findLastObjectIdFromFeatures,t as initialObjectId};\n"],"names":["pointLayer","polylineLayer","polygonLayer","textLayer","sketchLayer","pointSymbol","pointSketchViewModel","polylineSketchViewModel","polygonSketchViewModel","textSketchViewModel","sketchLayerView","highlights","highlightedGraphic","selectedTool","fillSymbol","SimpleFillSymbol","color","style","outline","width","lineSymbol","SimpleLineSymbol","cap","join","textSymbol","TextSymbol","haloColor","haloSize","text","xoffset","yoffset","font","size","family","weight","createSketchViewModels","layer","view","isText","sketchVM","SketchViewModel","updateOnGraphicClick","on","addGraphic","e","state","graphic","geometry","type","symbol","add","create","tool","remove","highlight","toolSelected","activeSketchTool","setActiveSketchTool","cancelSketch","includes","updatingPolygonSymbol","polygonSymbolUpdated","fillColor","outlineColor","preview","document","getElementById","activeFillSymbol","updateHighlightedGraphicSymbol","innerHTML","symbolUtils","node","then","clone","pointSymbolUpdated","request","url","cimRef","replace","ref","CIMSymbol","data","cimSymbolUtils","polylineSymbolUpdated","lineColor","polylineSymbol","updateGraphics","forEach","textSymbolUpdated","fontSize","fontColor","showHalo","textContent","cancel","ColorButton","args","popover","useRef","picker","setColor","useState","transparency","setTransparency","useEffect","Color","id","label","iconEnd","appearance","toHex","overlayPositioning","placement","referenceElement","heading","icon","slot","onClick","current","toggle","c","a","colorSet","hideSaved","hideHex","hideChannels","value","onCalciteColorPickerInput","target","hideTransparency","className","max","min","onCalciteSliderInput","numberButtonType","suffixText","onCalciteInputInput","parseInt","React","SizeSlider","setValue","sizeSet","parseFloat","LineSymbols","setLineColor","setWidth","toRgba","PolygonSymbols","setFillColor","setOutlineColor","TextSymbols","setFontColor","setFontSize","setShowHalo","setHaloSize","setHaloColor","setTextContent","scale","onCalciteInputChange","requestAnimationFrame","toString","layout","checked","undefined","onCalciteSwitchChange","hidden","IconPicker","alignment","pickerClicked","src","thumbnail","href","alt","title","height","IconSelectionPanel","symbols","setSymbols","showBackButton","onCalcitePanelBackClick","backClicked","map","i","iconSelected","PointSymbols","setSymbol","pointSize","setPointSize","ids","activeFlow","setActiveFlow","pointColor","setPointColor","Promise","resolve","reject","promises","WebStyleSymbol","styleUrl","name","push","length","items","all","results","result","item","getSymbols","Sketch","loaded","isActive","setIsActive","selectedGraphics","setSelectedGraphics","MapNotesLayer","listMode","whenLayerView","layerView","activeLineSymbol","viewModel","activeTool","graphics","initializeSketchViewModel","toolDismissed","useCallback","closed","dismissed","dismissible","onCalcitePanelDismiss","collapsePanel","active","removeAll","removeMany","deleteSelectedGraphics","F","layers","some","layerDefinition","visibilityField","G","T","alias","nullable","editable","_","P","w","constructor","super","this","visibilityMode","initialize","sourceLayer","sublayers","y","readOnly","prototype","u","k","geometryType","geometryTypeJSON","layerId","identifyingSymbol","C","toJSON","M","I","R","z","L","v","x","J","n","j","capabilities","operations","supportsMapNotesEditing","featureCollections","featureCollectionJSON","featureCollectionType","legendEnabled","minScale","maxScale","spatialReference","D","r","readCapabilities","t","origin","readFeatureCollections","o","O","read","readLegacyfeatureCollectionJSON","featureCollection","readFullExtent","every","extent","E","xmin","ymin","xmax","ymax","reduce","union","readMinScale","readMaxScale","multipointLayer","_findSublayer","readSpatialReference","readSublayers","l","Math","featureSet","find","drawingInfo","renderer","features","attributes","popupInfo","popupTemplate","writeSublayers","p","messages","m","_writeMapNoteSublayer","s","load","addResolvingPromise","loadFromPortal","supportedTypes","Object","assign","h","d","f","g","b","S","_writeMapNote","_normalizeObjectIds","objectIdField","fields","N","Set","has","json","origins","write","enabled","ignoreOrigin","overridePolicy","Number","nonNullable","B","isFinite"],"sourceRoot":""}