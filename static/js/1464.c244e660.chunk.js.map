{"version":3,"file":"static/js/1464.c244e660.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/core/rest/support/AddressesToLocationsParameters.js","components/Panels/Location/utils/location.ts","components/Panels/Location/Location.tsx"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{_ as r}from\"../../chunks/tslib.es6.js\";import\"../../geometry.js\";import{JSONSupport as e}from\"../../core/JSONSupport.js\";import{property as o}from\"../../core/accessorSupport/decorators/property.js\";import\"../../core/arrayUtils.js\";import\"../../core/has.js\";import{ensureType as t}from\"../../core/accessorSupport/ensureType.js\";import{subclass as s}from\"../../core/accessorSupport/decorators/subclass.js\";import a from\"../../geometry/SpatialReference.js\";let p=class extends e{constructor(r){super(r),this.addresses=null,this.categories=null,this.countryCode=null,this.locationType=null,this.outSpatialReference=null}};r([o({type:[Object],json:{read:{reader:r=>r&&r.records?r.records.map((r=>r.attributes)):null},write:{writer:(r,e)=>{const o=[];Array.isArray(r)&&r.forEach((r=>{o.push({attributes:r})})),e.addresses={records:o}}}}})],p.prototype,\"addresses\",void 0),r([o({type:[String],json:{read:{source:\"category\",reader:r=>r?r.split(\",\"):null},write:{target:\"category\",writer:(r,e)=>{e.category=r?r.join(\",\"):null}}}})],p.prototype,\"categories\",void 0),r([o({type:String,json:{read:{source:\"sourceCountry\"},write:{target:\"sourceCountry\"}}})],p.prototype,\"countryCode\",void 0),r([o({type:String,json:{write:!0}})],p.prototype,\"locationType\",void 0),r([o({type:a,json:{read:{source:\"outSR\"},write:{target:\"outSR\"}}})],p.prototype,\"outSpatialReference\",void 0),p=r([s(\"esri.rest.support.AddressesToLocationsParameters\")],p),p.from=t(p);const i=p;export{i as default};\n","import FeatureLayer from \"@arcgis/core/layers/FeatureLayer\";\nimport PictureMarkerSymbol from \"@arcgis/core/symbols/PictureMarkerSymbol\";\nimport MapView from \"@arcgis/core/views/MapView\";\nimport widgetSearch from \"@arcgis/core/widgets/Search\";\nimport LayerSearchSource from \"@arcgis/core/widgets/Search/LayerSearchSource\";\nimport LocatorSearchSource from \"@arcgis/core/widgets/Search/LocatorSearchSource\";\nimport { addressToLocations } from \"@arcgis/core/rest/locator\";\nimport Graphic from \"@arcgis/core/Graphic\";\nimport SimpleFillSymbol from \"@arcgis/core/symbols/SimpleFillSymbol\";\nimport Color from \"@arcgis/core/Color\";\nimport Feature from \"@arcgis/core/widgets/Feature\";\n\nexport function intializeLocationSearch(\n  view: MapView,\n  container: HTMLDivElement\n): Promise<widgetSearch> {\n  return new Promise((resolve, reject) => {\n    const sources: any[] = [];\n    addLocationSearch().then((source) => {\n      sources.push(source);\n      addIntersectionSource().then((source) => {\n        sources.push(source);\n        const search = new widgetSearch({\n          view: view,\n          maxSuggestions: 30,\n          searchAllEnabled: true,\n          popupEnabled: false,\n          container: container,\n          goToOverride: (view, params) => {\n            view.goTo(\n              { target: params.target.target, zoom: 17 },\n              { duration: 1000, easing: \"ease\" as any }\n            );\n          },\n        });\n        search.sources.addMany(sources);\n        resolve(search);\n        search.allSources.on(\"after-add\", (event: any) => {\n          if ((event.item as any).layer) {\n            const item: __esri.LayerSearchSource =\n              event.item as __esri.LayerSearchSource;\n            item.name = (event.item as any).layer.title;\n            item.placeholder = (event.item as any).layer.title;\n          }\n          if (event.item.name.includes(\"World Geocoding\")) {\n            search.allSources.remove(event.item);\n          }\n        });\n      });\n    });\n  });\n}\n\nconst addIntersectionSource = (): Promise<LayerSearchSource> => {\n  return new Promise((resolve) => {\n    const layer = new FeatureLayer({\n      portalItem: {\n        id: \"edb2153e06c2477995f95b27e5c24661\",\n      },\n      title: \"Intersection\",\n      layerId: 0,\n    });\n    layer.load().then(() => {\n      const source = new LayerSearchSource({\n        name: \"Intersection\",\n        placeholder: \"Enter first street name\",\n        layer: layer,\n        autoNavigate: false,\n        resultGraphicEnabled: false,\n      });\n      resolve(source);\n    });\n  });\n};\n\nconst addLocationSearch = (): Promise<LocatorSearchSource> => {\n  return new Promise((resolve) => {\n    // const locator = new Locator({\n    //   url: 'https://maps.raleighnc.gov/arcgis/rest/services/Locators/Locator/GeocodeServer',\n    //   outSpatialReference: view.spatialReference,\n    // });\n\n    const source = new LocatorSearchSource({\n      name: \"Street Address\",\n      placeholder: \"Enter an address\",\n      url: \"https://maps.raleighnc.gov/arcgis/rest/services/Locators/Locator/GeocodeServer\",\n      autoNavigate: true,\n      resultSymbol: new PictureMarkerSymbol({\n        url: \"assets/pin.svg\",\n        height: 36,\n        width: 36,\n      }), //new CIMSymbol(pinSymbol as any),\n    });\n    resolve(source);\n  });\n};\n\nexport function addSearchEvents(\n  search: widgetSearch,\n  view: MapView,\n  setIsIntersection: Function,\n  setIntersections: Function,\n  setSearchTerm: Function,\n  feature: Feature\n) {\n  search.on(\"search-complete\", (result) => {\n    (feature as any).graphic = null;\n    setSearchTerm(result.searchTerm);\n    setIsIntersection(result.results[0].source.name === \"Intersection\");\n    if (result.results[0].source.name === \"Intersection\") {\n      result.results[0].source.layer\n        .queryFeatures({\n          geometry: result.results[0].results[0].feature.geometry,\n          returnGeometry: false,\n          outFields: [\"CARTONAME\"],\n          orderByFields: [\"CARTONAME\"],\n        })\n        .then((featureSet: __esri.FeatureSet) => {\n          setIntersections(\n            featureSet.features.map((feature) => {\n              return feature.getAttribute(\"CARTONAME\");\n            })\n          );\n        });\n    } else {\n      removeGraphics(search.view as MapView);\n      const graphics: Graphic[] = [];\n      result.results[0].results.forEach((result) => {\n        //feature.graphic = result.feature;\n        addGraphics(search.view as MapView, result.feature.geometry);\n        graphics.push(result.feature);\n        feature.graphic = result.feature;\n      });\n    }\n  });\n}\n\nexport function intersectingStreetSelected(\n  intersection: string,\n  searchTerm: string,\n  view: MapView\n) {\n  const value = `${intersection} & ${searchTerm}`;\n  addressToLocations(\n    \"https://maps.raleighnc.gov/arcgis/rest/services/Locators/Locator/GeocodeServer\",\n    {\n      address: {\n        outSpatialReference: view.spatialReference,\n        SingleLine: value,\n      },\n    }\n  ).then((candidates: any) => {\n    if (candidates.length) {\n      removeGraphics(view);\n      addGraphics(view, candidates[0].location);\n      view.goTo(\n        { target: candidates[0].location, zoom: 17 },\n        { duration: 1000, easing: \"ease\" as any }\n      );\n    }\n  });\n}\n\nconst addGraphics = (view: __esri.MapView, geometry: __esri.Geometry): void => {\n  if (geometry.type === \"point\") {\n    view.graphics.add(\n      new Graphic({\n        geometry: geometry,\n        attributes: { type: \"location\" },\n        symbol: new PictureMarkerSymbol({\n          url: \"assets/pin.svg\",\n          height: 36,\n          width: 36,\n        }), //new CIMSymbol(pinSymbol as any),\n      })\n    );\n  } else {\n    view.graphics.add(\n      new Graphic({\n        geometry: geometry,\n        attributes: { type: \"location\" },\n        symbol: new SimpleFillSymbol({\n          color: new Color([0, 255, 255, 0.25]),\n          outline: {\n            color: new Color([0, 255, 255, 1]),\n            width: 2,\n          },\n        }),\n      })\n    );\n  }\n};\nconst removeGraphics = (view: __esri.MapView): void => {\n  view.graphics.removeMany(\n    view.graphics.filter((graphic: __esri.Graphic) => {\n      return graphic.getAttribute(\"type\") === \"location\";\n    })\n  );\n};\n\nexport function intializeLocationFeature(\n  view: MapView,\n  container: HTMLDivElement\n) {\n  return new Feature({ view: view, container: container });\n}\n","import \"@esri/calcite-components/dist/components/calcite-combobox\";\nimport \"@esri/calcite-components/dist/components/calcite-combobox-item\";\nimport {\n  CalciteCombobox,\n  CalciteComboboxItem,\n  CalciteLabel,\n} from \"@esri/calcite-components-react\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport {\n  addSearchEvents,\n  intersectingStreetSelected,\n  intializeLocationFeature,\n  intializeLocationSearch,\n} from \"./utils/location\";\nimport \"./Location.css\";\nfunction Location(args: any) {\n  const searchDiv = useRef(null);\n  const featureDiv = useRef<HTMLDivElement>(null);\n\n  const loaded = useRef(false);\n  const search = useRef<__esri.widgetsSearch>();\n  const feature = useRef<__esri.Feature>();\n\n  const [isIntersection, setIsIntersection] = useState(false);\n  const [intersections, setIntersections] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    if (!loaded.current && searchDiv.current) {\n      loaded.current = true;\n      intializeLocationSearch(args.view, searchDiv.current).then(\n        (searchWidget: __esri.widgetsSearch) => {\n          search.current = searchWidget;\n          addSearchEvents(\n            searchWidget,\n            args.view,\n            setIsIntersection,\n            setIntersections,\n            setSearchTerm,\n            feature.current as __esri.Feature\n          );\n        }\n      );\n      feature.current = intializeLocationFeature(\n        args.view,\n        featureDiv.current as HTMLDivElement\n      );\n    }\n  });\n  return (\n    <div id=\"location-search\">\n      <div ref={searchDiv}></div>\n      {isIntersection && (\n        <div id=\"intersection-search\">\n          <CalciteLabel>\n            Intersections\n            <CalciteCombobox label={\"\"} selectionMode=\"single\" scale=\"l\">\n              {intersections.map((intersection, i) => {\n                return (\n                  <CalciteComboboxItem\n                    key={i}\n                    textLabel={intersection}\n                    value={intersection}\n                    onCalciteComboboxItemChange={(e: any) => {\n                      if (e.target.selected) {\n                        intersectingStreetSelected(\n                          intersection,\n                          searchTerm,\n                          search?.current?.view as __esri.MapView\n                        );\n                      }\n                    }}\n                  ></CalciteComboboxItem>\n                );\n              })}\n            </CalciteCombobox>\n          </CalciteLabel>\n        </div>\n      )}\n      <div id=\"location-feature\" ref={featureDiv}></div>\n    </div>\n  );\n}\n\nexport default React.memo(Location);\n"],"names":["p","e","constructor","r","super","this","addresses","categories","countryCode","locationType","outSpatialReference","o","type","Object","json","read","reader","records","map","attributes","write","writer","Array","isArray","forEach","push","prototype","String","source","split","target","category","join","a","s","from","t","addIntersectionSource","Promise","resolve","layer","FeatureLayer","portalItem","id","title","layerId","load","then","LayerSearchSource","name","placeholder","autoNavigate","resultGraphicEnabled","addLocationSearch","LocatorSearchSource","url","resultSymbol","PictureMarkerSymbol","height","width","addGraphics","view","geometry","graphics","add","Graphic","symbol","SimpleFillSymbol","color","Color","outline","removeGraphics","removeMany","filter","graphic","getAttribute","Location","args","searchDiv","useRef","featureDiv","loaded","search","feature","isIntersection","setIsIntersection","useState","intersections","setIntersections","searchTerm","setSearchTerm","useEffect","container","current","reject","sources","widgetSearch","maxSuggestions","searchAllEnabled","popupEnabled","goToOverride","params","goTo","zoom","duration","easing","addMany","allSources","on","event","item","includes","remove","searchWidget","result","results","queryFeatures","returnGeometry","outFields","orderByFields","featureSet","features","addSearchEvents","Feature","intializeLocationFeature","ref","label","selectionMode","scale","intersection","i","textLabel","value","onCalciteComboboxItemChange","selected","addressToLocations","address","spatialReference","SingleLine","candidates","length","location","intersectingStreetSelected","React"],"sourceRoot":""}